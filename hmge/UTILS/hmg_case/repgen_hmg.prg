#Include "hmg.ch"

Function Rep_GEN() 		 

use _rep_apl
if reccount() = 0
   use
   msginfo('Nothing, first create Report')
   return 
endif
use

   DEFINE WINDOW RepGenForm ;
      AT 0,0 ;
      WIDTH 400 ;  
      HEIGHT 300 ;
      TITLE 'Generate Report program' ;
      MODAL ;      
      ON INIT OpenTablesR1()
	
   ON KEY ESCAPE ACTION RepGenForm.Release
   
   @ 010,010 COMBOBOX Combo_1 ;
	   ITEMSOURCE _REP_APL->REPNAME ;
      VALUE 1 ;
	   WIDTH 200 HEIGHT 100 ;
	   FONT "Arial" SIZE 10 ; 
	   TOOLTIP "Report" 

      @ 150, 150 BUTTON REPORT_111 ; 
         CAPTION " Create report " ;
         WIDTH 100 ;
         ACTION rep_genn() 

   END WINDOW		 

      CENTER WINDOW   RepGenForm
      ACTIVATE WINDOW RepGenForm

Return
*:------------------------------------------
Procedure OpenTablesR1()

   Use _rep_apl index _rep_apl new
   
Return
*:------------------------------------------*
function rep_genn 

PRIVATE w_dbf, ext_name, prg_name, lst_name, w_ntx, w_rep, _red, ima_nema
PRIVATE full_prg_name, dbf_name, ntx_name, ntx_len
PRIVATE ww_brk, for_brk, w_name, w_line, w_seq, w_pos, w_pict
PRIVATE _naslov, _bio_rec, _bio_mak, _sad_rec, _sad_mak, _bio_nis
PRIVATE _title, _breci, _ii, _rec, tek_pos, duz_zvezdi, poz_za_sum
PRIVATE alinija[20], b_lin, cFont, nFontSize

cFontName = '"Courier"'
nFontSize = '10'

_key := RepGenForm.Combo_1.Value

dbcloseall()

SELECT 1
USE _rep_apl INDEX _rep_apl
go _key
_ext1 := apl_num

w_rep := alltrim(repname)
ext_name := STRZERO(apl_num,3)
w_dbf := w_rep

dbcloseall()

pre_gen ( w_rep )

ext_name1 = alltrim(str(_ext1))
ext_name3 = sbrand()

prg_name = 'REP_' + ext_name1
prg_name = ALLTRIM( prg_name )
lst_name = prg_name + '.lst'

SELECT 6
USE _rep_fld INDEX _rep_fld
SET FILTER TO repname = w_rep
dbgotop()

SELECT 5
USE _rep_brk INDEX _rep_brk

SELECT 4
USE _rep_rep

SELECT 2
USE _ntx

* SELECT 1
* USE &w_dbf

full_prg_name = prg_name + '.prg'

SET DEVICE TO PRINTER
SET PRINTER TO &full_prg_name

_red = 0
@ _red, 0 say '/*'
_red++
@ _red, 0 say ' * This program is generated by HMGCASE'
_red++
@ _red, 0 say ' * developed by Dragan Cizmarevic < dragancesu(at)gmail.com > '
_red++
@ _red, 0 say ' * created at ' + dtoc(date()) + ' ' + time()
_red++
@ _red, 0 say ' */'
_red++
@ _red,0 SAY '#include "hmg.ch"'
_red++
_red++

@ _red,0 SAY 'Procedure MAIN // for test, usually Report_' + ext_name1
_red++

_red++
@ _red,0 SAY '   SET BROWSESYNC ON'
_red++
@ _red,0 SAY '   SET NAVIGATION EXTENDED'
_red++

_red++
@ _red,0 SAY '   SET DATE GERMAN // for test'
_red++
@ _red,0 SAY '   SET CENTURY ON  // for test'
_red++

_red++
@ _red,0 SAY '   SET procedure to open_dbf // for test'
_red++
@ _red,0 SAY '   SET procedure to open_ntx // for test'
_red++
@ _red,0 SAY '   SET procedure to use_dbf // for test'
_red++

_red++
@ _red,0 SAY '   open_dbf() // for test'
_red++
@ _red,0 SAY '   open_ntx() // for test'
_red++

_red++
@ _red,0 SAY '   DEFINE WINDOW Rep_' + ext_name1 + ' ;'
_red++
@ _red,0 SAY '      AT 0, 0 ;'
_red++
@ _red,0 SAY '      WIDTH 400 ;'
_red++
@ _red,0 SAY '      HEIGHT 400 ;'
_red++
@ _red,0 SAY '      TITLE "' + w_rep + '" ;'
_red++
@ _red,0 SAY '      MAIN  // for test, usually MODAL ;'
_red++

_red++
@ _red,0 SAY '      ON KEY ESCAPE ACTION Rep_' + ext_name1 + '.Release '
_red++

_row = 20

select 6
dbgotop()
do while .not. eof()

if !fldatr5
   dbskip()
   loop
endif

_row = _row + 30

_red++
@ _red,0 SAY '      @ ' + alltrim(str(_row)) + ', 100  LABEL Label_' + alltrim(str(fldseq)) + ' VALUE "' + alltrim(fldhead) + '"'

_red++
_rr = 'p' + upper(alltrim(fldname))
_spaces = space ( 12 - len(_rr))

do case
   case fldtype = 'N'
        _ctrl = ' TEXTBOX '           
        _type = ' NUMERIC INPUTMASK '   
        _width = ' WIDTH ' + alltrim(str(fldlen*10+10))
        _format = '"'+alltrim(fldpict)+'"'
   case fldtype = 'C'
        _ctrl = ' TEXTBOX '           
        _type = ' INPUTMASK '   
        _fldpict = strtran(fldpict,'X','!')
        _width = ' WIDTH ' + alltrim(str(fldlen*10+10))
        _format = '"'+alltrim(_fldpict)+'"'
   case fldtype = 'D'
        _ctrl = ' TEXTBOX '           
        _type = ' DATE '   
        _width = '' 
        _format = ''
        
endcase

@ _red, 0 say '      @ ' + alltrim(str(_row)) + ', 150 ' + _ctrl + ' ' + _rr + _spaces + _width + _type + _format

dbskip()
enddo
_red++

_row = _row + 50
if _row < 150
   _row = 150
endif

_red++
@ _red,0 SAY '   @ ' + alltrim(str(_row)) + ', 150 BUTTON PRINT_' + ext_name3 + ' ;'
_red++
@ _red,0 SAY '      CAPTION " Create report " ;'
_red++
@ _red,0 SAY '      ACTION rep_create_' + ext_name3 + '() ;'
_red++
@ _red,0 SAY '      WIDTH 100'
_red++
_red++
@ _red,0 SAY '   END WINDOW'
_red++
_red++
@ _red,0 SAY '   Rep_' + ext_name1 + '.CENTER'
_red++
@ _red,0 SAY '   ACTIVATE WINDOW Rep_' + ext_name1 
_red++
_red++
@ _red,0 SAY 'RETURN'
_red++
@ _red,0 SAY '*' + replicate('-',40) + '*'
_red++
@ _red,0 SAY 'PROCEDURE rep_create_' + ext_name3
_red++
_red++
@ _red,0 SAY 'PRIVATE mPrinter, nCurLine:=300, nCurPage:=0, nPageSize:=280, /* := 180 */ nVMargin:=10, nHMargin:=10 '
_red++
@ _red,0 SAY 'PRIVATE cFontName:="Verdana", nFontSize:=8, nFontHeight:=4, nCharWidth:=2 '
_red++

_red++
@ _red,0 SAY 'USE_' + w_dbf + '()   // function from USE_DBF.prg ' 
_red++

*** sum on break init *****************

SELECT 5
dbGOBOTTOM()
IF LASTREC() = 0
   for_brk = 0
ELSE
   for_brk = fldbrk
ENDIF

FOR ww_brk = 1 TO for_brk
   SET FILTER TO fldbrk = ww_brk
   
   SELECT 4
   GO ww_brk
   w_name = fldname
   
   w_line = 'brk_' + STRZERO(ww_brk,2) + '    := ' + w_name
   _red++
   @ _red,0 SAY w_line
   
   w_line = 'brk_on_' + STRZERO(ww_brk,2) + ' := .F.'
   _red++
   @ _red,0 SAY w_line
   
   w_line = 'prt_' + STRZERO(ww_brk,2) + '    := .T.'
   _red++
   @ _red,0 SAY w_line
   
   SELECT 5
   dbgotop()
   DO WHILE .NOT. EOF()
      
      w_seq = fldseq
      w_line = 'sum_' + STRZERO(ww_brk,2) + '_' + STRZERO(w_seq,2) + ' := 0 '
      _red++
      @ _red,0 SAY w_line
      
      dbskip()
   ENDDO
   _red++
NEXT

*** end *******************************

*** sum on report init ****************

ima_nema = .F.
SELECT 4
dbgotop()

DO WHILE ! EOF()
   
   IF fldsumr = 0
      dbskip()
      LOOP
   ENDIF
   
   w_line = 'sumr_' + STRZERO(fldseq,2) + ' := 0 '
   
   _red++
   @ _red,0 SAY w_line
   
   ima_nema = .T.
   
   dbskip()
ENDDO

IF ima_nema
   _red++
ENDIF

* end *********************************

_red++
@ _red,0 SAY '   mPrinter := GetPrinter()'
_red++
@ _red,0 SAY '   IF Empty ( mPrinter )'
_red++
@ _red,0 SAY '      MsgExclamation( "Printer not selected" )'
_red++
@ _red,0 SAY '      dbcloseall()'
_red++
@ _red,0 SAY '      RETURN NIL'
_red++
@ _red,0 SAY '   ENDIF'
_red++

_red++
@ _red,0 SAY '   SELECT PRINTER mPrinter ;'
_red++
@ _red,0 SAY '      ORIENTATION PRINTER_ORIENT_PORTRAIT ;  // PRINTER_ORIENT_LANDSCAPE ; '
_red++
@ _red,0 SAY '      PAPERSIZE PRINTER_PAPER_A4 ;'
_red++
@ _red,0 SAY '      PREVIEW '
_red++

_red++
@ _red,0 SAY '   START PRINTDOC NAME "report" '
_red++

_red++
@ _red,0 SAY 'DBGOTOP()'
_red++
@ _red,0 SAY 'DO WHILE .NOT. EOF()'
_red++

* sum on report ***********************

ima_nema = .F.
SELECT 4
dbgotop()

DO WHILE ! EOF()
   
   IF fldsumr = 0
      dbskip()
      LOOP
   ENDIF
   
   w_line = 'sumr_' + STRZERO(fldseq,2) + ' := sumr_' + STRZERO(fldseq,2) + ' + ' + fldname
   _red++
   @ _red,0 SAY w_line
   
   ima_nema = .T.
   
   dbskip()
ENDDO

IF ima_nema
   _red++
ENDIF

* end *********************************

*** check on break ********************

FOR ww_brk = 1 TO for_brk
   
   SELECT 5
   SET FILTER TO fldbrk = ww_brk
   
   SELECT 4
   GO ww_brk
   w_name = fldname
   
   w_line = '   IF ' + 'brk_' + STRZERO(ww_brk,2) + ' <> ' + w_name
   _red++
   @ _red,0 SAY w_line
   
   FOR www_brk = ww_brk TO for_brk
      
      w_line = '      brk_on_' + STRZERO(www_brk,2) + ' := .T.'
      _red++
      @ _red,0 SAY w_line
      
      w_line = '      prt_' + STRZERO(www_brk,2) + '    := .T.'
      _red++
      @ _red,0 SAY w_line
   NEXT
   
   w_line = '   ENDIF'
   _red++
   @ _red,0 SAY w_line
   _red++
NEXT

* end *********************************

*** sum on break *** init *************

FOR ww_brk = for_brk TO 1 STEP -1
   
   SELECT 5
   SET FILTER TO fldbrk = ww_brk
   
   *** sum on break *** step 1 ***********
   
   SELECT 4
   GO ww_brk
   w_name = fldname
   
   w_line = '   IF ' + 'brk_' + STRZERO(ww_brk,2) + ' <> ' + ALLTRIM(w_name) + ' .OR. brk_on_' + STRZERO(ww_brk,2)
   _red++
   @ _red,0 SAY w_line
   _red++
   
   _red++
   @ _red,0 SAY '      nCurLine += nFontHeight'
   
   SELECT 4
   GO ww_brk
   
   // _col = 5+(fldpos-1)*2
 
   _red++
   @ _red,0 SAY '      nCurCol = nHMargin + ' + alltrim(str(fldpos)) + ' * nCharWidth'
   w_line = '      @ nCurLine, nCurCol PRINT replicate("*", ' + STR(fldlen,2) + ') FONT cFontName SIZE nFontSize '

   _red++
   @ _red,0 SAY w_line
   duz_zvezdi = fldlen
   poz_za_sum = fldpos
   
   SELECT 5
   dbgotop()
   DO WHILE .NOT. EOF()
      
      w_seq = fldseq
      SELECT 4
      GO w_seq
   
      // _col = 5+(fldpos-1)*2
   
      _red++
      @ _red,0 SAY '      nCurCol = nHMargin + ' + alltrim(str(fldpos)) + ' * nCharWidth'
      
      _red++
      @ _red,0 SAY '      nCurCol2 = nCurCol + ' + alltrim(str(fldlen)) + ' * nCharWidth'
      // w_line = '      @ nCurLine, nCurCol PRINT replicate("-", ' + STR(fldlen,2) + ') FONT cFontname SIZE nFontSize'
      w_line = '      @ nCurLine+2, nCurCol PRINT LINE TO nCurLine+2, nCurCol2 PENWIDTH .1'
      
      _red++
      @ _red,0 SAY w_line
      
      SELECT 5
      
      dbskip()
   ENDDO
   _red++
   
   *** sum on break *** step 2 ***********
   
   _red++
   @ _red,0 SAY '      nCurLine += nFontHeight'
   
   _col = 5+(poz_za_sum-1)*2
  
   _red++
   @ _red,0 SAY '      nCurCol = nHMargin + ' + alltrim(str(poz_za_sum)) + ' * nCharWidth'
   w_line = '      @ nCurLine, nCurCol PRINT '
  
   IF duz_zvezdi < 3
      w_line = w_line + '"' +  SUBSTR('sum',1,duz_zvezdi) + '"'
   ELSE
      w_line = w_line + '"sum" FONT cFontName SIZE nFontSize'
   ENDIF
   _red++
   @ _red,0 SAY w_line
   
   SELECT 5
   dbgotop()
   DO WHILE .NOT. EOF()
      
      w_seq = fldseq
      
      SELECT 4
      GO w_seq
      w_pos = fldpos
      w_pict = fldpict

      // _col = 5+(w_pos-1)*2
      _align = ''
 
      _red++
      if fldtype = 'N'      
         @ _red,0 SAY '      nCurCol = nHMargin + ' + alltrim(str(w_pos)) + ' * nCharWidth + ' + alltrim(str(fldlen)) + ' * nCharWidth '
         _align = 'RIGHT'
      else     
         @ _red,0 SAY '      nCurCol = nHMargin + ' + alltrim(str(w_pos)) + ' * nCharWidth'
      endif  
            
      w_line = '      @ nCurLine, nCurCol PRINT '
      // w_line = w_line + 'sum_' + STRZERO(ww_brk,2) + '_' + STRZERO(w_seq,2)
      IF ! EMPTY(w_pict)
         w_line = w_line + ' TRANSFORM ( sum_' + STRZERO(ww_brk,2) + '_' + STRZERO(w_seq,2) + ', "' + ALLTRIM(w_pict) + '")'
      ENDIF
      
      _red++
      @ _red,0 SAY w_line + ' FONT cFontName SIZE nFontSize ' + _align
      
      SELECT 5
      
      dbskip()
   ENDDO
   _red++
   @ _red,0 SAY '      nCurLine += nFontHeight'
   _red++
   
   *** sum on break *** step 3 ***********
   
   SELECT 4
   GO ww_brk
   w_name = fldname
   w_line = '      brk_' + STRZERO(ww_brk,2) + ' := ' + w_name
   _red++
   @ _red,0 SAY w_line
   
   w_line = '      brk_on_' + STRZERO(ww_brk,2) + ' := .F.'
   _red++
   @ _red,0 SAY w_line
   
   SELECT 5
   dbgotop()
   DO WHILE .NOT. EOF()
      
      w_seq = fldseq
      w_line = '      sum_' + STRZERO(ww_brk,2) + '_' + STRZERO(w_seq,2) + ' := 0 '
      _red++
      @ _red,0 SAY w_line
      
      dbskip()
   ENDDO
   _red++
   
   SELECT 6
   LOCATE FOR fldseq = ww_brk
   IF FOUND()
      IF SUBSTR(fldatr,5,1) = '*'
         @ _red,0 SAY '      nCurLine := 300'
         _red++
      ENDIF
   ENDIF
   
   _red++
   @ _red,0 SAY '   ENDIF'
   _red++
   
   *** sum on break *** step 4 ***********
   
   ima_nema = .F.
   SELECT 5
   dbgotop()
   DO WHILE .NOT. EOF()
      
      w_seq = fldseq
      
      SELECT 4
      GO w_seq
      w_pos = fldpos
      w_name = fldname
      
      w_line = '   sum_' + STRZERO(ww_brk,2) + '_' + STRZERO(w_seq,2) + ' := '
      w_line = w_line + 'sum_' + STRZERO(ww_brk,2) + '_' + STRZERO(w_seq,2) + ' + '
      w_line = w_line + w_name
      _red++
      @ _red,0 SAY w_line
      ima_nema = .T.
      
      SELECT 5
      
      dbskip()
   ENDDO
   
   IF ima_nema
      _red++
   ENDIF
   
   *** end *******************************
   
NEXT

_red++
@ _red,0 SAY '   IF nCurLine > nPageSize'
_red++
@ _red,0 SAY '      hdr_' + ext_name3 + '()'
_red++
@ _red,0 SAY '   ENDIF'
_red++

SELECT 4
dbgotop()

_red++
@ _red,0 SAY '   nCurLine += nFontHeight'

tek_pos = 0
DO WHILE ! EOF()
   
   IF fldlen = 0
      dbskip()
      LOOP
   ENDIF
   
   ima_break = .F.
   ww_brk = fldseq
   SELECT 5
   dbgotop()
   LOCATE FOR fldbrk = ww_brk
   IF FOUND()
      ima_break = .T.
   ENDIF
   
   SELECT 4
   IF ima_break
      w_line = '   IF prt_' + STRZERO(ww_brk,2)
      _red++
      @ _red,0 SAY w_line
      uvlaka = SPACE(3)
   ELSE
      uvlaka = ''
   ENDIF
   
   *** detail  
 
   // _col = 5+(fldpos-1)*2
   
   _align = ''
   // _col = nHMargin + fldpos * nCharWidth
   _col = 10 + fldpos * 2.5
   
   if fldtype = 'N'
      // _col = _col + fldlen * nCharWidth
      _col = _col + fldlen * 2.5
      _align = ' RIGHT'
   endif
  
   if fldtype = 'N'
      _red++
       @ _red,0 SAY uvlaka + '   nCurCol = nHMargin + ' + alltrim(str(fldpos)) + ' * nCharWidth + ' + alltrim(str(fldlen)) + ' * nCharWidth ' 
   else 
      _red++
      @ _red,0 SAY uvlaka + '   nCurCol = nHMargin + ' + alltrim(str(fldpos)) + ' * nCharWidth'
   endif
   
   //w_line = uvlaka + '   @ nCurLine, ' + STR(_col,3) + ' PRINT '
   w_line = uvlaka + '   @ nCurLine, nCurCol PRINT '
   
   IF ! EMPTY(fldpict)
      w_line = w_line + ' TRANSFORM ( ' + alltrim(fldname) + ', "' + ALLTRIM(fldpict) + '")'
   ELSE
      w_line = w_line + fldname
   ENDIF
   w_line = w_line + ' FONT cFontName SIZE nFontSize' + IIF(fldtype='N',' RIGHT','')

   _red++
   @ _red,0 SAY w_line
   // detail
   
   IF ima_break
      w_line = '      prt_' + STRZERO(ww_brk,2) + ' := .F.'
      _red++
      @ _red,0 SAY w_line
      
      w_line = '   ENDIF'
      _red++
      @ _red,0 SAY w_line
   ENDIF
   
   dbskip()
ENDDO
_red++

_red++
@ _red,0 SAY '   DBSKIP()'
_red++
@ _red,0 SAY 'ENDDO'
_red++

*_red++
*@ _red,0 SAY '*** break (1)'
*_red++

*** sum on break *** print ************

ima_nema = .T.
FOR ww_brk = for_brk TO 1 STEP -1
   
   SELECT 5
   SET FILTER TO fldbrk = ww_brk
   
   _red++
   @ _red,0 SAY 'nCurLine += nFontHeight'
   
   SELECT 4
   GO ww_brk
   
   // _col = 5+(fldpos-1)*2
   
   _red++
   @ _red,0 SAY 'nCurCol = nHMargin + ' + alltrim(str(fldpos)) + ' * nCharWidth'
   w_line = '@ nCurLine, nCurCol PRINT replicate("*", ' + STR(fldlen,2) + ') FONT cFontName SIZE nFontSize'

   _red++
   @ _red,0 SAY w_line
   duz_zvezdi = fldlen
   poz_za_sum = fldpos
   
   SELECT 5
   dbgotop()
   DO WHILE .NOT. EOF()
      
      w_seq = fldseq
      
      SELECT 4
      GO w_seq
      
      // _col = 5+(fldpos-1)*2
      
      _red++
      @ _red,0 SAY 'nCurCol = nHMargin + ' + alltrim(str(fldpos)) + ' * nCharWidth'
   
      _red++
      @ _red,0 SAY 'nCurCol2 = nCurCol + ' + alltrim(str(fldlen)) + ' * nCharWidth'
      // w_line = '@ nCurLine, ' + STR(_col,3) + ' PRINT replicate("-", ' + STR(fldlen,2) + ') FONT cFontName SIZE nFontSize'
      w_line = '@ nCurLine+2, nCurCol PRINT LINE TO nCurLine+2, nCurCol2 PENWIDTH .1 '     
     
      _red++
      @ _red,0 SAY w_line
      
      SELECT 5
      
      dbskip()
   ENDDO
   _red++
      
*_red++
*@ _red,0 SAY '*** break (2)'
*_red++
      
   *** detail ************ 
     
   _red++
   @ _red,0 SAY 'nCurLine += nFontHeight'
   _red++
   @ _red,0 SAY 'nCurCol = nHMargin + 1 * nCharWidth'
   
   _col = 5+(poz_za_sum-1)*2
   *w_line = '@ nCurLine, ' + STR(_col,3) + ' PRINT '
   w_line = '@ nCurLine, nCurCol PRINT '
   
   IF duz_zvezdi < 3
      w_line = w_line + '"' +  SUBSTR('sum',1,duz_zvezdi) + '"'
   ELSE
      w_line = w_line + '"sum"'
   ENDIF
   _red++
   @ _red,0 SAY w_line + ' FONT cFontName SIZE nFontSize'
   
   SELECT 5
   dbgotop()
   DO WHILE .NOT. EOF()
      
      w_seq = fldseq
      
      SELECT 4
      GO w_seq
      w_pos = fldpos
      w_pict = fldpict
      
      // _col = 5+(w_pos-1)*2
  
      _align = ''
      if fldtype = 'N'
         _red++
         @ _red,0 SAY 'nCurCol = nHMargin + ' + alltrim(str(fldpos)) + ' * nCharWidth + ' + alltrim(Str(fldlen)) + ' * nCharWidth '
        _align = 'RIGHT'  
      else
         _red++
         @ _red,0 SAY 'nCurCol = nHMargin + ' + alltrim(str(fldpos)) + ' * nCharWidth'
      endif
      
      w_line = '@ nCurLine, nCurCol PRINT '
      
      // w_line = w_line + 'sum_' + STRZERO(ww_brk,2) + '_' + STRZERO(w_seq,2)
      IF ! EMPTY(w_pict)
         w_line = w_line + ' TRANSFORM ( sum_' + strzero(ww_brk,2) + '_' + STRZERO(w_seq,2) + ', "' + ALLTRIM(w_pict) + '")'
      ELSE
         w_line = w_line + 'sum_' + STRZERO(ww_brk,2) + '_' + STRZERO(w_seq,2)
      ENDIF
     
      _red++
      @ _red,0 SAY w_line + ' FONT cFontName SIZE nFontSize ' + _align
      ima_nema = .F.
      
      SELECT 5
      
      dbskip()
   ENDDO
   _red++
NEXT

*_red++
*@ _red,0 SAY '*** break (3)'
*_red++

IF ima_nema
   @ _red,0 SAY 'nCurLine += nFontHeight'
   _red++
ENDIF

*** end *******************************

* sum on report print *****************

ima_nema = .F.
SELECT 4
dbgotop()
DO WHILE ! EOF()
   
   IF fldsumr = 0
      dbskip()
      LOOP
   ENDIF
   
   IF ! ima_nema
      _red++
      @ _red,0 SAY 'nCurLine += nFontHeight'
      ima_nema = .T.
   ENDIF

   // _col = 5+(fldpos-1)*2
   
   _red++
   @ _red,0 SAY 'nCurCol = nHMargin + ' + alltrim(str(fldpos)) + ' * nCharWidth'
   
   _red++
   @ _red,0 SAY 'nCurCol2 = nCurCol + ' + alltrim(str(fldlen)) + ' * nCharWidth'
   // w_line = '@ nCurLine, ' + STR(_col,3) + ' PRINT replicate("=", ' + STR(fldlen,2) + ') FONT cFontName SIZE nFontSize'
   
   w_line = '@ nCurLine+2, nCurCol PRINT LINE TO nCurLine+2, nCurCol2 PENWIDTH .5'
  
   _red++
   @ _red,0 SAY w_line
   
   dbskip()
ENDDO

*_red++
*@ _red,0 SAY '*** break (4)'
*_red++

IF ima_nema
   _red++
ENDIF

*** part 2 ****************************

ima_nema = .F.
dbgotop()
DO WHILE ! EOF()
   
   IF fldsumr = 0
      dbskip()
      LOOP
   ENDIF
   
   IF ! ima_nema
      _red++
      @ _red,0 SAY 'nCurLine += nFontHeight'
      ima_nema = .T.
   ENDIF
   
   // _col = 5+(fldpos-1)*2
   _align = '' 
      
   if fldtype = 'N' 
      _red++
      @ _red,0 SAY 'nCurCol = nHMargin + ' + alltrim(str(fldpos)) + ' * nCharWidth + ' + alltrim(str(fldlen)) + ' * nCharWidth '
      _align = 'RIGHT' 
   else
      _red++
      @ _red,0 SAY 'nCurCol = nHMargin + ' + alltrim(str(fldpos)) + ' * nCharWidth'
  endif 
   
   w_line = '@ nCurLine, nCurCol PRINT '
   IF ! EMPTY(fldpict)
      w_line = w_line + ' TRANSFORM ( sumr_' + strzero(fldseq,2) + ', "' + ALLTRIM(fldpict) + '")'
   ELSE  
      w_line = w_line + 'sumr_' + STRZERO(fldseq,2)
   ENDIF
   w_line = w_line + ' FONT cFontName SIZE nFontSize BOLD ' + _align
   
   _red++
   @ _red,0 SAY w_line
   
   dbskip()
ENDDO

*_red++
*@ _red,0 SAY '*** break (5)'
*_red++

IF ima_nema
   _red++
ENDIF

*** end *******************************

_red++
@ _red,0 SAY '   END PRINTPAGE'
_red++
@ _red,0 SAY 'END PRINTDOC'
_red++
_red++
@ _red,0 SAY 'DBCLOSEALL()'
_red++

SELECT 4
dbGOBOTTOM()
_uku_pno = fldpos + fldlen + 10
_uku_pno = INT( _uku_pno / 10 ) * 10

IF _uku_pno > 100
   _ddd = ', ' + STR( _uku_pno, 3 )
ELSE
   _ddd = ''
ENDIF

_red++
@ _red,0 SAY 'Rep_' + ext_name1 + '.RELEASE'
_red++

_red++
@ _red,0 SAY 'RETURN 0'
*******************************************************
*
*   function HDR_
*
*******************************************************
_red++
@ _red,0 SAY '*' + replicate('-',40) + '*'
_red++
@ _red,0 SAY 'FUNCTION hdr_' + ext_name3
_red++

_red++
@ _red,0 SAY 'nCurPage++'
_red++
@ _red,0 SAY 'nCurLine := nVMargin'
_red++

_red++
@ _red,0 SAY 'IF nCurPage > 1'
_red++
@ _red,0 SAY '   END PRINTPAGE'
_red++
@ _red,0 SAY 'ENDIF'
_red++
_red++
@ _red,0 SAY '   START PRINTPAGE'
_red++

_red++
@ _red,0 SAY '@ nCurLine, 10 PRINT "Date : " + DTOC(date()) FONT cFontName SIZE nFontSize // BOLD'
_red++
@ _red,0 SAY '@ nCurLine, 180 PRINT "Page : " + STR(nCurPage, 3)' + ' FONT cFontName SIZE nFontSize // BOLD'
_red++
@ _red,0 SAY '@ nCurLine, 100 PRINT "TITLE of Report" FONT cFontName SIZE nFontSize+2 CENTER BOLD'
_red++
@ _red,0 SAY 'nCurLine += nFontHeight'
_red++

_red++
@ _red,0 SAY 'nCurLine += nFontHeight'

*** heading ***

SELECT 4
dbgotop()
DO WHILE ! EOF()
   
   IF fldlen = 0
      dbskip()
      LOOP
   ENDIF
   
   // _col = 5+(fldpos-1)*2
   _align = '' 
   _korekcija = ''
     
   if fldtype = 'N'
      _korekcija = ' + ' + alltrim(str(fldlen)) + ' * nCharWidth'
      _align = 'RIGHT '
   endif  
   
   _red++
   @ _red,0 SAY 'nCurCol = nHMargin + ' + alltrim(str(fldpos)) + ' * nCharWidth' + _korekcija
   
   w_name = RTRIM(fldhead)
   w_name = SUBSTR(w_name,1,fldlen)
   w_line = '@ nCurLine, nCurCol PRINT "' + w_name + '"' + ' FONT cFontName SIZE nFontSize ' + _align + 'BOLD'
   
   _red++
   @ _red,0 SAY w_line
   
   dbskip()
ENDDO
_red++

_red++
@ _red,0 SAY 'nCurLine += nFontHeight'

*** podvlacenje polja ***

dbgotop()
DO WHILE ! EOF()
   
   IF fldlen = 0
      dbskip()
      LOOP
   ENDIF
   
   // _col = 5+(fldpos-1)*2
   _red++
   @ _red,0 SAY 'nCurCol = nHMargin + ' + alltrim(str(fldpos)) + ' * nCharWidth'
   _red++
   @ _red,0 SAY 'nCurCol2 = nCurCol + ' + alltrim(str(fldlen)) + ' * nCharWidth'
   // w_line = '@ nCurLine, nCurCol PRINT replicate("=", ' + STR(fldlen,2) + ') FONT cFontName SIZE nFontSize'
   
   w_line = '@ nCurLine+2, nCurCol PRINT LINE TO nCurLine+2, nCurCol2 PENWIDTH .5'
   
   _red++
   @ _red,0 SAY w_line
   
   dbskip()
ENDDO

*** treba stampati i break polja ***

_red++
SELECT 4
dbgotop()
DO WHILE .NOT. EOF()
   
   ww_brk = fldseq
   
   SELECT 5
   dbgotop()
   LOCATE FOR fldbrk = ww_brk
   IF FOUND()
      
      w_line = 'prt_' + STRZERO(ww_brk,2) + ' := .T.'
      _red++
      @ _red,0 SAY w_line
      
   ENDIF
   SELECT 4
   
   dbskip()
ENDDO
_red++

* end ******************************

_red++
@ _red,0 SAY 'RETURN 0'
_red++
@ _red,0 SAY SPACE(0)

SET PRINTER TO
SET DEVICE TO SCREEN
SETPRC(0,0)

SELECT 5
* ZAP

SELECT 4
* ZAP

dbcloseall()

msgInfo ( 'Generate ' + full_prg_name + ' !')

RepGenForm.Release

RETURN 0
*:*********************************************************************
FUNCTION pre_gen ( _rep_name )

LOCAL w_seq, w_brk, brk_count, tek_pos, tek_break
LOCAL w_sumb, w_sumr, w_name, w_pict, w_head, w_tek, w_len

w_seq = 0
w_brk = 0
brk_count = 0

tek_pos = 0
tek_break = 0

SELECT 3
USE _rep_brk index _rep_brk
ZAP

SELECT 2
USE _rep_rep
ZAP

SELECT 1
USE _rep_fld index _rep_fld
SET FILTER TO repname = _rep_name

dbgotop()
DO WHILE ! EOF()
   
// IF SUBSTR(fldatr,1,1) != '*' .AND. SUBSTR(fldatr,5,1) != '*'
   IF !fldatr1 .and. !fldatr5
      dbskip()
      LOOP
   ENDIF
   
// IF SUBSTR(fldatr,2,1) = '*'
   IF fldatr2
      brk_count++
      w_brk = brk_count
   ELSE
      w_brk = 0
   ENDIF
   
// IF SUBSTR(fldatr,3,1) = '*'
   IF fldatr3
      w_sumb = 1
   ELSE
      w_sumb = 0
   ENDIF
   
// IF SUBSTR(fldatr,4,1) = '*'
   IF fldatr4
      w_sumr = 1
   ELSE
      w_sumr = 0
   ENDIF
   
   tek_pos++
   w_tek = tek_pos
   
// IF SUBSTR(fldatr,1,1) = '*'
   IF fldatr1
      w_len = fldduz
	  if fldtype = 'D' .and. w_len < 10
	     w_len = 10
	  endif
	  *tek_pos = tek_pos + fldduz
	  tek_pos = tek_pos + w_len
   ELSE
      w_len = 0
      tek_pos--
   ENDIF
   
   w_name = fldname
   w_pict = fldpict
   w_head = fldhead
   w_type = fldtype
   
   SELECT 2
   dbappend()
   w_seq ++
   REPLACE fldseq   WITH w_seq
   REPLACE fldpos   WITH w_tek
   REPLACE fldlen   WITH w_len
   REPLACE fldname  WITH w_name
   REPLACE fldtype  WITH w_type
   REPLACE fldpict  WITH w_pict
   REPLACE fldhead  WITH w_head
   REPLACE fldbreak WITH w_brk
   REPLACE fldsumb  WITH w_sumb
   REPLACE fldsumr  WITH w_sumr
   
   IF w_brk <> 0
      SELECT 3
      dbappend()
      REPLACE fldbrk WITH w_brk
      REPLACE fldseq WITH 0
   ENDIF
   
   SELECT 1
   dbskip()
ENDDO

SELECT 3
dbgotop()
DO WHILE .NOT. EOF()
   
   IF fldseq <> 0
      dbskip()
      LOOP
   ENDIF
   
   w_brk = fldbrk
   DELETE FOR fldbrk = w_brk .AND. fldseq = 0
   PACK
   
   SELECT 2
   dbgotop()
   DO WHILE .NOT. EOF()
      
      w_seq = fldseq
      
      IF fldsumb <> 0
         SELECT 3
         dbappend()
         REPLACE fldbrk WITH w_brk
         REPLACE fldseq WITH w_seq
      ENDIF
      
      SELECT 2
      dbskip()
   ENDDO
   
   SELECT 3
   dbskip()
ENDDO

dbcloseall()

RETURN 0
