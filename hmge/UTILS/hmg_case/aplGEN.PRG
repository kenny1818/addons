#Include "hmg.ch"

Function apl_GEN() 		

	DEFINE WINDOW GenMainProgram ;
		AT 0,0 ;
		WIDTH 400 ;  
		HEIGHT 300 ;
		TITLE 'Generate Main program' ;
		MODAL ;      
		ON INIT Open_mnu()
	
	@ 150, 100 BUTTON REPORT_111 ; 
		CAPTION " Create Main program " ;
		WIDTH 200 ;
		ACTION main_genn() 

	END WINDOW		 

	CENTER WINDOW   GenMainProgram
	ACTIVATE WINDOW GenMainProgram

Return
*:-------------------------------------------
FUNCTION MAIN_GENN 

PRIVATE _ima_rc := .F.

open_mnu()

dbcloseall()

select 5
use _apladd index _apladd

select 4
use _aplmnus index _aplmnus

select 3
use _aplmnu index _aplmnu

select 2
use _aplset index _aplset

select 1
use _apl
_title = alltrim(title)

_prg_prg = alltrim(name) + '.prg'
_apl_name = alltrim(name)
_rc_name = alltrim(name) + '.rc'

if file( _rc_name )
   _ima_rc := .T.
endif

*** create .prg

tek_red = 0

set device to printer
set printer to &_prg_prg

@ tek_red, 0 say '/*'
tek_red++
@ tek_red, 0 say ' * This program is generated by HMGCASE'
tek_red++
@ tek_red, 0 say ' * developed by Dragan Cizmarevic < dragancesu(at)gmail.com > '
tek_red++
@ tek_red, 0 say ' * created at ' + dtoc(date()) + ' ' + time()
tek_red++
@ tek_red, 0 say ' */'
tek_red++

tek_red++
@ tek_red, 0 say '#include <hmg.ch>'
tek_red++

tek_red++
@ tek_red, 0 say 'PROCEDURE MAIN '
tek_red++

select 2
dbgotop()
do while .not. eof()

   tek_red++
   @ tek_red, 0 say '   SET ' + alltrim(seting)

   dbskip()
enddo
tek_red++

select 5
if reccount() > 0

tek_red++
@ tek_red, 0 say '   /* addition modules'

do while .not. eof()

tek_red++
@ tek_red, 0 say '      ' + alltrim(modul) + '.prg'

dbskip()
enddo

tek_red++
@ tek_red, 0 say '   */'
tek_red++

endif

select 1

tek_red++
@ tek_red, 0 say '   DEFINE WINDOW MainForm ;'
tek_red++
@ tek_red, 0 say '      AT 10, 10 ;'
tek_red++
@ tek_red, 0 say '      WIDTH ' + alltrim(str(width)) + ' ; '
tek_red++
@ tek_red, 0 say '      HEIGHT ' + alltrim(str(height)) + ' ; '
tek_red++
@ tek_red, 0 say '      TITLE "' + alltrim(title) + '" ;'
tek_red++

if _ima_rc
@ tek_red, 0 say '      ICON "main" ;'
else
@ tek_red, 0 say '      ICON "main.ico" ;'
endif

tek_red++
@ tek_red, 0 say '      MAIN ;'
tek_red++
@ tek_red, 0 say '      ON INIT on_start() ;'
tek_red++
@ tek_red, 0 say '      ON RELEASE dbcloseall()'
tek_red++

tek_red++
@ tek_red, 0 say '      ON KEY ESCAPE ACTION MainForm.Release'
tek_red++

tek_red++
@ tek_red, 0 say '      DEFINE STATUSBAR FONT "Arial" SIZE 12'
tek_red++
@ tek_red, 0 say '         STATUSITEM ""'
tek_red++
@ tek_red, 0 say '         *KEYBOARD'
tek_red++
@ tek_red, 0 say '         DATE WIDTH 100'
tek_red++
@ tek_red, 0 say '         CLOCK WIDTH 100'
tek_red++
@ tek_red, 0 say '      END STATUSBAR'
tek_red++

// create main menu

tek_red++
@ tek_red, 0 say '      DEFINE MAIN MENU'
tek_red++

select 3
_maxcol = 0
_kraj = .f.

dbgotop()
do while .not. eof()

   if level1 != 0
      dbskip()
      loop
   endif

   if _maxcol < level2
      _maxcol = level2
   endif
   
dbskip()
enddo

dbgotop()
do while .not. eof()

if level1 = 0
   _red = recno()
   _level2 = level2
   
   tek_red++
   @ tek_red, 0 say '         DEFINE POPUP "' + alltrim(item) + '"'
   
   select 3
   dbgotop()
   do while .not. eof()

      if level1 != _level2
         dbskip()
         loop
      endif

	  if !empty(modul)
         _modul = '   // ' + alltrim(modul) + '.prg'
	  else
	     _modul = ''
	  endif
	  
      tek_red++
      if item = '.' .or. item = '-'
         @ tek_red, 0 say '            SEPARATOR '
      elseif substr(action,1,1) = ':'
	     cre_sub_menu( action, item )
	  else
         @ tek_red, 0 say '            MENUITEM "' + alltrim(item) + '"' + space(30-len(alltrim(item))) + ' ACTION ' + alltrim(action) + _modul
      endif
   
      select 3
      dbskip()
   enddo
   
   tek_red++
   @ tek_red, 0 say '         END POPUP '
   tek_red++
   
endif

go _red

if _level2 = _maxcol
   exit
endif

dbskip()
enddo

//  tek_red++
// @ tek_red, 0 say '         END POPUP'
// tek_red++

tek_red++
@ tek_red, 0 say '      END MENU'
tek_red++

tek_red++
@ tek_red, 0 say '      @ 450, 650 BUTTON THE_END ;'
tek_red++
@ tek_red, 0 say '          CAPTION "Izlaz" ;'
tek_red++

if _ima_rc 
@ tek_red, 0 say '          PICTURE "frm_exit" RIGHT ;'
else
@ tek_red, 0 say '          PICTURE "frm_exit.bmp" RIGHT ;'
endif

tek_red++
@ tek_red, 0 say '          ACTION MainForm.Release ;'
tek_red++
@ tek_red, 0 say '          WIDTH 100 ;'
tek_red++
@ tek_red, 0 say '          HEIGHT 40 '
tek_red++

tek_red++
@ tek_red, 0 say '      @ 700, 900 BUTTON NOTHING ;'
tek_red++
@ tek_red, 0 say '          CAPTION "." ;'
tek_red++
@ tek_red, 0 say '          ACTION nil ;'
tek_red++
@ tek_red, 0 say '          WIDTH 10 ;'
tek_red++
@ tek_red, 0 say '          HEIGHT 10 '
tek_red++

tek_red++
@ tek_red, 0 say '      @ 450, 100 LABEL MainLabel ;'
tek_red++
@ tek_red, 0 say '          WIDTH 400 HEIGHT 40 ;'
tek_red++
@ tek_red, 0 say "          VALUE '" + _title + "' ;"
tek_red++
@ tek_red, 0 say "          FONT 'Arial' SIZE 24 "
tek_red++

tek_red++
@ tek_red, 0 say '   END WINDOW'
tek_red++

tek_red++
@ tek_red, 0 say '   MainForm.Nothing.SetFocus'
tek_red++

tek_red++
@ tek_red, 0 say '   ACTIVATE WINDOW MainForm'
tek_red++

tek_red++
@ tek_red, 0 say 'RETURN'

tek_red++
@ tek_red, 0 say '*:---------------------------------------------*'

tek_red++
@ tek_red, 0 say 'PROCEDURE on_start'
tek_red++

tek_red++
@ tek_red, 0 say '   open_dbf()'
tek_red++
@ tek_red, 0 say '   open_ntx()'
tek_red++

tek_red++
@ tek_red, 0 say 'RETURN'

tek_red++
@ tek_red, 0 say '*:---------------------------------------------*'

tek_red++
@ tek_red, 0 say 'PROCEDURE working'
tek_red++

tek_red++
@ tek_red, 0 say '   msginfo("Under construction")'
tek_red++

tek_red++
@ tek_red, 0 say 'RETURN'
tek_red++

@ tek_red, 0 say '* end of program *'
tek_red++

set printer to 
set device to screen
setprc(0,0)

dbcloseall()

MsgInfo ( 'Generate ' + _prg_prg + ' !')

select 5
use _apladd index _apladd

select 4
use _aplmnus 

select 3
use _aplmnu

select 1
use _apl

*** create .hbp

_main = alltrim(name) + '.prg'
_hbp_hbp = alltrim(name) + '.hbp'

tek_red = 0

set device to printer
set printer to &_hbp_hbp

@ tek_red, 0 say _main
tek_red++

select 3
do while .not. eof()

if empty(modul)
   dbskip()
   loop
endif

_modul = modul

@ tek_red, 0 say alltrim(_modul) + '.prg'
tek_red++

dbskip()
enddo

* dodatni moduli

select 5
do while .not. eof()

if empty(modul)
   dbskip()
   loop
endif

_modul = alltrim(upper(modul)) + '.prg'

@ tek_red, 0 say _modul
tek_red++

dbskip()
enddo

* submenus

select 4
do while .not. eof()

if empty(modul)
   dbskip()
   loop
endif

_modul = alltrim(lower(modul)) + '.prg'

@ tek_red, 0 say _modul
tek_red++

dbskip()
enddo

dbcloseall()

set printer to 
set device to screen
setprc(0,0)

MsgInfo ( 'Generate ' + _hbp_hbp + ' !')

mk_emp_prg()

GenMainProgram.Release

RETURN
*:---------------------------------------------------
FUNCTION cre_sub_menu ( _akcija, _stavka ) 

_broj = val(substr(_akcija,2.3))

@ tek_red, 0 say '            POPUP "' + alltrim(_stavka) + '"'

select 4
dbgotop()
do while .not. eof()

   if level3 != _broj
      dbskip()
      loop
   endif

   tek_red++
   if item = '.' .or. item = '-' 
      @ tek_red, 0 say '               SEPARATOR '
   else
      @ tek_red, 0 say '               MENUITEM "' + alltrim(item) + '"' + space(30-len(alltrim(item))) + ' ACTION ' + alltrim(action)
   endif
	  
   dbskip()
enddo

tek_red++
@ tek_red, 0 say '            END POPUP '

select 3

RETURN
*:******************************************************************
function mk_emp_prg()

use _aplmnu

do while .not. eof()

_action = alltrim(action)
_modul = alltrim(modul)

if empty(_modul)
   dbskip()
   loop
endif

if at('(',_action) < 1
   dbskip()
   loop
endif

_prg_name = _modul + '.prg'

if file(_prg_name)
   dbskip()
   loop
endif

_red = 0

set device to printer
set printer to &_prg_name

@ _red,0 say '#include <hmg.ch>'
_red++
_red++
@ _red,0 say 'Function ' + _action
_red++
_red++
@ _red,0 say '   msginfo( "' + _action + ' / ' + _prg_name + '" )'
_red++
_red++
@ _red,0 say 'Return'
_red++
@ _red,0 say ''
_red++

set printer to
set device to screen
setprc(0,0)
	
dbskip()
enddo

dbcloseall()

*** aditional programs

use _apladd	

dbgotop()
do while .not. eof()

_modul = alltrim(modul)

_prg_name = _modul + '.prg'

if file(_prg_name)
   dbskip()
   loop
endif

_red = 0

set device to printer
set printer to &_prg_name

@ _red,0 say '#include <hmg.ch>'
_red++
_red++
@ _red,0 say 'Function ' + _modul
_red++
_red++
@ _red,0 say '   msginfo( "' + _action + ' / ' + _prg_name + '" )'
_red++
_red++
@ _red,0 say 'Return'
_red++
@ _red,0 say ''
_red++

set printer to
set device to screen
setprc(0,0)

dbskip()
enddo

dbcloseall()

return
