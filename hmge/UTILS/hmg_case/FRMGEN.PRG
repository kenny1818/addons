#Include "hmg.ch"

Function Frm_GEN() 		

use _frm_apl
if reccount() = 0
   use
   msginfo('Nothing, first create Form')
   return 
endif
use

	DEFINE WINDOW FrmGenForm ;
		AT 0,0 ;
		WIDTH 400 ;  
		HEIGHT 300 ;
		TITLE 'Generate Form program' ;
		MODAL ;      
		ON INIT OpenTablesF1()
	
        ON KEY ESCAPE ACTION FrmGenForm.Release
   
		@ 010,010 COMBOBOX Combo_1 ;
			ITEMSOURCE _FRM_APL->FORMNAME ;
			VALUE 1 ;
			WIDTH 200 HEIGHT 100 ;
			FONT "Arial" SIZE 10 ; 
			TOOLTIP "Form" 

	    @ 150, 150 BUTTON REPORT_111 ; 
            CAPTION " Create Form " ;
		    WIDTH 100 ;
		    ACTION frm_genn() 

	END WINDOW		 

	CENTER WINDOW   FrmGenForm
	ACTIVATE WINDOW FrmGenForm

Return
*:------------------------------------------
Procedure OpenTablesF1()

	Use _frm_apl index _frm_apl New
   
Return
*:-------------------------------------------
FUNCTION FRM_GENN 

_key := FrmGenForm.Combo_1.Value

dbcloseall()

select 2
use _frm_apl
go _key

_table := alltrim(formname)

select 4
use _frm_fld
set filter to formname = _table
dbgotop()
count to _polja for formname = _table
count to _val   for fldatr8
count to _sum   for fldatr7

select 2
locate for formname = _table
_xx = apl_num

_nn = alltrim(str(_xx))
_nnn = sbrand()

_frm_prg = 'edit_' + _nn + '.prg'

select 1
use _frm_dbf
set filter to dbfname = _table
dbgotop()
_grid_w = grid_w
_grid_h = grid_h

tek_red = 0

set device to printer
set printer to &_frm_prg

@ tek_red, 0 say '/*'
tek_red++
@ tek_red, 0 say ' * This program is generated by HMGCASE'
tek_red++
@ tek_red, 0 say ' * developed by Dragan Cizmarevic < dragancesu(at)gmail.com > '
tek_red++
@ tek_red, 0 say ' * created at ' + dtoc(date()) + ' ' + time()
tek_red++
@ tek_red, 0 say ' */'
tek_red++

tek_red++
@ tek_red, 0 say '#include <hmg.ch>'
tek_red++

tek_red++
@ tek_red, 0 say 'PROCEDURE MAIN // for test, usually edit_' + alltrim(_table)

tek_red++
tek_red++
@ tek_red, 0 say '   PUBLIC NewRec := .F., EditRec := .F.,  FindRec := .F., FiltRec := .F., _qry_exp := ""'
tek_red++

if _sum > 0      // ako ima SUM polja

   _sums = ''
   for _i = 1 to _sum
       _sums = _sums + if(_i>1,', ','') + ' sum_' + alltrim(str(_i)) 
   next

@ tek_red, 0 say '   PRIVATE ' + _sums
tek_red++

endif

tek_red++
@ tek_red, 0 say '   set navigation extended    // for test  '
tek_red++
@ tek_red, 0 say '   set deleted on             // for test  '
tek_red++

tek_red++
@ tek_red, 0 say '   set date german            // for test  '
tek_red++
@ tek_red, 0 say '   set century on             // for test  '
tek_red++

tek_red++
@ tek_red, 0 say '   set procedure to open_dbf  // for test  '
tek_red++
@ tek_red, 0 say '   set procedure to open_ntx  // for test  '
tek_red++
@ tek_red, 0 say '   set procedure to Use_dbf   // for test  '
tek_red++

tek_red++
@ tek_red, 0 say '   open_dbf()                 // for test  '
tek_red++
@ tek_red, 0 say '   open_ntx()                 // for test  '
tek_red++

tek_red++
@ tek_red, 0 say '   set procedure to sbr_lov '  
tek_red++

tek_red++
@ tek_red, 0 say '   open_' + _nnn + '() '
tek_red++

tek_red++
@ tek_red, 0 say '   DEFINE WINDOW Win_' + _nn + ' ;'
tek_red++
@ tek_red, 0 say '      AT 0,0 ;'
tek_red++
@ tek_red, 0 say '      WIDTH 1000 ;'
tek_red++
@ tek_red, 0 say '      HEIGHT 700 ;'
tek_red++
@ tek_red, 0 say '      TITLE "Table ' + _table + '" ;'
tek_red++
@ tek_red, 0 say '      MAIN ; // for test, usually MODAL ;' 
tek_red++
if _sum > 0
@ tek_red, 0 say '      ON INIT sum_' + _nnn + '() ;' 
tek_red++


endif
@ tek_red, 0 say '      ON RELEASE dbcloseall() ;' 
tek_red++
@ tek_red, 0 say '      BACKCOLOR { 230, 230, 230 }' 
tek_red++

tek_red++
@ tek_red, 0 say '      ON KEY ESCAPE ACTION CancelEdit_' + _nnn + '() '
tek_red++
tek_red++
@ tek_red, 0 say '      ON KEY F2   ACTION ( FiltRec := .T., Find_' + _nnn + '())'
tek_red++
@ tek_red, 0 say '      ON KEY F4   ACTION ( FiltRec := .F., EditRec := .T., NewRec := .F., If ( RecordStatus_' + _nnn + '(), EnableField_' + _nnn + '(), Nil ))'
tek_red++
@ tek_red, 0 say '      ON KEY F6   ACTION ( FiltRec := .F., NewRec := .T., EditRec = .F., NewRecord_' + _nnn + '() )'
tek_red++
@ tek_red, 0 say '      ON KEY F8   ACTION ( FiltRec := .F., RecordStatus_' + _nnn + '(), DeleteRecord_' + _nnn + '(), Nil )'
tek_red++
@ tek_red, 0 say '      ON KEY F9   ACTION PrintData_' + _nnn + '()'
tek_red++
@ tek_red, 0 say '      ON KEY F10  ACTION Win_' + _nn + '.Release'
tek_red++

tek_red++
@ tek_red, 0 say '      DEFINE STATUSBAR FONT "Arial" SIZE 12'
tek_red++
@ tek_red, 0 say '         STATUSITEM "Table ' + _table + '"'
/*
tek_red++
@ tek_red, 0 say '         *KEYBOARD'
tek_red++
@ tek_red, 0 say '         *DATE'
tek_red++
@ tek_red, 0 say '         *CLOCK' */
tek_red++ 
@ tek_red, 0 say '      END STATUSBAR'
tek_red++

tek_red++
@ tek_red, 0 say '      DEFINE TOOLBAR ToolBar_' + _nn + ' BUTTONSIZE 50,50 IMAGESIZE 24,24 FLAT BORDER'
tek_red++
/*
tek_red++
@ tek_red, 0 say '      BUTTON FIRST_' + _nnn + ' ;'
tek_red++
@ tek_red, 0 say '         CAPTION "First" ;'
tek_red++
@ tek_red, 0 say '         PICTURE "go_first.bmp" ;'
tek_red++
@ tek_red, 0 say '         ACTION ( dbGotop(), Win_' + _nn + '.Browse_' + _nn + '.Value := RecNo() )'
tek_red++

tek_red++
@ tek_red, 0 say '      BUTTON PREV_' + _nnn + ' ;'
tek_red++
@ tek_red, 0 say '         CAPTION "Prev" ;'
tek_red++
@ tek_red, 0 say '         PICTURE "go_prev.bmp" ;'
tek_red++
@ tek_red, 0 say '         ACTION ( dbSkip( -1 ), Win_' + _nn + '.Browse_' + _nn + '.Value := RecNo() )'
tek_red++

tek_red++
@ tek_red, 0 say '      BUTTON NEXT_' + _nnn + ' ;'
tek_red++
@ tek_red, 0 say '         CAPTION "Next" ;'
tek_red++
@ tek_red, 0 say '         PICTURE "go_next.bmp" ;'
tek_red++
@ tek_red, 0 say '         ACTION ( dbSkip(), if ( Eof(), dbGobottom(), Nil ), Win_' + _nn + '.Browse_' + _nn  +'.Value := RecNo() )'
tek_red++

tek_red++
@ tek_red, 0 say '      BUTTON LAST_' + _nnn + ' ;'
tek_red++
@ tek_red, 0 say '         CAPTION "Last" ;'
tek_red++
@ tek_red, 0 say '         PICTURE "go_last.bmp" ;'
tek_red++
@ tek_red, 0 say '         ACTION ( dbGoBottom(), Win_' + _nn + '.Browse_' + _nn + '.Value := RecNo() )   SEPARATOR ' 
tek_red++
*/
tek_red++
@ tek_red, 0 say '      BUTTON FIND_' + _nnn + ' ;'
tek_red++
@ tek_red, 0 say '         CAPTION "[F2] Find" ;'
tek_red++
@ tek_red, 0 say '         PICTURE "frm_find.bmp" ;'
tek_red++
@ tek_red, 0 say '         ACTION ( FiltRec := .T., Find_' + _nnn + '())'
tek_red++

tek_red++
@ tek_red, 0 say '      BUTTON EDIT_' + _nnn + ' ;'
tek_red++
@ tek_red, 0 say '         CAPTION "[F4] Edit" ;'
tek_red++
@ tek_red, 0 say '         PICTURE "frm_edit.bmp" ;'
tek_red++
@ tek_red, 0 say '         ACTION ( FiltRec := .F., EditRec := .T., NewRec := .F., If ( RecordStatus_' + _nnn + '(), EnableField_' + _nnn + '(), Nil ))'
tek_red++

tek_red++
@ tek_red, 0 say '      BUTTON NEW_' + _nnn + ' ;'
tek_red++
@ tek_red, 0 say '         CAPTION "[F6] New" ;'
tek_red++
@ tek_red, 0 say '         PICTURE "frm_new.bmp" ;'
tek_red++
@ tek_red, 0 say '         ACTION ( FiltRec := .F., NewRec := .T., EditRec = .F., NewRecord_' + _nnn + '() )'
tek_red++

tek_red++
@ tek_red, 0 say '      BUTTON DELETE_' + _nnn + ' ;'
tek_red++
@ tek_red, 0 say '         CAPTION "[F8] Delete" ;'
tek_red++
@ tek_red, 0 say '         PICTURE "frm_delete.bmp" ;'
tek_red++
@ tek_red, 0 say '         ACTION ( FiltRec := .F., RecordStatus_' + _nnn + '(), DeleteRecord_' + _nnn + '(), Nil )'
tek_red++

tek_red++
@ tek_red, 0 say '      BUTTON PRINT_' + _nnn + ' ;'
tek_red++
@ tek_red, 0 say '         CAPTION "[F9] Print" ;'
tek_red++
@ tek_red, 0 say '         PICTURE "frm_print.bmp" ;'
tek_red++
@ tek_red, 0 say '         ACTION PrintData_' + _nnn + '()'
tek_red++

tek_red++
@ tek_red, 0 say '      BUTTON EXIT_' + _nnn + ' ;'
tek_red++
@ tek_red, 0 say '         CAPTION "[F10] Exit" ;'
tek_red++
@ tek_red, 0 say '         PICTURE "frm_exit.bmp" ;'
tek_red++
@ tek_red, 0 say '         ACTION Win_' + _nn + '.Release'
tek_red++

tek_red++
@ tek_red, 0 say '      // add users functions in Toolbar '
tek_red++
@ tek_red, 0 say '      /*'

tek_red++
@ tek_red, 0 say '      BUTTON FN1_' + _nnn + ' ;'
tek_red++
@ tek_red, 0 say '         CAPTION "Fn(1)" ;'
tek_red++
@ tek_red, 0 say '         PICTURE "frm_fn.bmp" ;'
tek_red++
@ tek_red, 0 say '         ACTION nil'
tek_red++

tek_red++
@ tek_red, 0 say '      BUTTON FN2_' + _nnn + ' ;'
tek_red++
@ tek_red, 0 say '         CAPTION "Fn(2)" ;'
tek_red++
@ tek_red, 0 say '         PICTURE "frm_fn.bmp" ;'
tek_red++
@ tek_red, 0 say '         ACTION nil'
tek_red++

tek_red++
@ tek_red, 0 say '      BUTTON FN3_' + _nnn + ' ;'
tek_red++
@ tek_red, 0 say '         CAPTION "Fn(3)" ;'
tek_red++
@ tek_red, 0 say '         PICTURE "frm_fn.bmp" ;'
tek_red++
@ tek_red, 0 say '         ACTION nil'
tek_red++

@ tek_red, 0 say '      */'
tek_red++

tek_red++
@ tek_red, 0 say '      END TOOLBAR'
tek_red++

tek_red++
@ tek_red, 0 say '      PaintDisplay_' + _nnn + '()'
tek_red++

tek_red++
@ tek_red, 0 say '      @ 65, 10 LABEL   lFILTER VALUE "FILTER" WIDTH 55 '
tek_red++
@ tek_red, 0 say '      @ 64, 70 TEXTBOX mFILTER WIDTH 600 '
tek_red++

_head = ''
_fild = ''
_wids = ''
_ima = 0
_just = ''

select 4
dbgotop()
do while .not. eof()

if fldatr1 
   _head = _head + '"' + alltrim(fldlabel) + '",' 
   _fild = _fild + '"' + alltrim(fldname) + '",' 
   _siri1 = max( len(alltrim(fldlabel)), len(alltrim(fldname)) )
   _siri = max ( _siri1, fldlen)
   _wids = _wids + alltrim(str(_siri*10+10)) + ','
   _ima++
endif

if dbfname = '$'
   _recno = recno()
   _p = fldname
   _l = fldlen
   _n = fldname

   dbgotop()   
   locate for valid_dsp = _p

   _head = _head + '"$' + alltrim(_n) + '",' 
   _fild = _fild + '"' +  alltrim(valid_dbf) + '->' + alltrim(valid_fld) + '",' 
   *_siri1 = max( len(alltrim(fldlabel)), len(alltrim(fldname)) )
   *_siri = max ( _siri1, fldlen)
   _siri = _l
   _wids = _wids + alltrim(str(_siri*10)) + ','
   _ima++
   
   go _recno
endif

if fldtype = 'N'
   _just = _just + 'BROWSE_JTFY_RIGHT, '
else
   _just = _just + ', '
endif

dbskip()
enddo

if _ima > 0
   _duzh = len(_head)
   _duzf = len(_fild)
   _duzw = len(_wids)
   _duzj = len(_just)
   
   _head = substr(_head,1,_duzh-1)
   _fild = substr(_fild,1,_duzf-1)
   _wids = substr(_wids,1,_duzw-1)   
   _just = substr(_just,1,_duzj-1)   
endif

tek_red++
@ tek_red, 0 say '      @ 90, 10 BROWSE Browse_' + _nn + ' ;'
tek_red++
@ tek_red, 0 say '         OF Win_' + _nn + ' ;'
tek_red++
@ tek_red, 0 say '         WIDTH ' + alltrim(str(_grid_w))+ ' ;'
tek_red++
@ tek_red, 0 say '         HEIGHT ' + alltrim(str(_grid_h))+ ' ;'
tek_red++
@ tek_red, 0 say '         FONT "Arial" ; '
tek_red++
@ tek_red, 0 say '         SIZE 10 ;'
tek_red++
@ tek_red, 0 say '         HEADERS { ' + _head + ' } ;'
tek_red++
@ tek_red, 0 say '         WIDTHS { ' + _wids + ' } ;'
tek_red++
@ tek_red, 0 say '         WORKAREA ' + _table + ' ;'
tek_red++
@ tek_red, 0 say '         FIELDS { ' + _fild + ' } ;'
tek_red++
@ tek_red, 0 say '         ON CHANGE LoadData_' + _nnn + '() ;'
tek_red++
@ tek_red, 0 say '         ON HEADCLICK { {||head1_' + _nnn + '()}, {||head2_' + _nnn + '()} } ;'
tek_red++
@ tek_red, 0 say '         ON DBLCLICK ( EnableField_' + _nnn + '(), If ( ! RecordStatus_' + _nnn + '(), DisableField_' + _nnn + '(), Nil ) ) ;'
tek_red++
@ tek_red, 0 say '         JUSTIFY { ' + _just + ' } '
tek_red++

if _sum > 0
tek_red++
@ tek_red, 0 say '      @ 600, 400 LABEL label_s VALUE "UKUPNO" TRANSPARENT'

_col = 500
_i = 0
select 4
dbgotop()
do while .not. eof()

   if !fldatr7
      dbskip()
      loop
   endif

   _i++
   _l = fldlen * 10
   _p = alltrim(fldpict)
   
   tek_red++
   @ tek_red, 0 say '      @ 600, ' + alltrim(str(_col)) + ' TEXTBOX dSum_' + alltrim(str(_i)) + ' WIDTH ' + alltrim(str(_l)) + ' NUMERIC INPUTMASK "' + _p + '"'

   _col = _col + _l + 10

dbskip()
enddo
tek_red++
endif

tek_red++
@ tek_red, 0 say '      @ 580, 50 BUTTON SAVE_' + _nnn + ' ;'
tek_red++
@ tek_red, 0 say '         CAPTION "Save" ;'
tek_red++
@ tek_red, 0 say '         PICTURE "frm_save.bmp" RIGHT ;'
tek_red++
@ tek_red, 0 say '         ACTION SaveRecord_' + _nnn + '() ;'
tek_red++
@ tek_red, 0 say '         WIDTH 100 ;'
tek_red++
@ tek_red, 0 say '         HEIGHT 40 '
tek_red++

tek_red++
@ tek_red, 0 say '      @ 580, 300 BUTTON QUERY_' + _nnn + ' ;'
tek_red++
@ tek_red, 0 say '         CAPTION "Query" ;'
tek_red++
@ tek_red, 0 say '         PICTURE "frm_find.bmp" RIGHT ;'
tek_red++
@ tek_red, 0 say '         ACTION QueryRecord_' + _nnn + '() ;'
tek_red++
@ tek_red, 0 say '         WIDTH 100 ;'
tek_red++
@ tek_red, 0 say '         HEIGHT 40 '
tek_red++

tek_red++
@ tek_red, 0 say '      @ 60, 700 BUTTON  FILTER_' + _nnn + ' ;'
tek_red++
@ tek_red, 0 say '         CAPTION "Filter" ;'
tek_red++
@ tek_red, 0 say '         ACTION DoFilter_' + _nnn + '() ;'
tek_red++
@ tek_red, 0 say '         WIDTH 80 ;'
tek_red++
@ tek_red, 0 say '         HEIGHT 30 '
tek_red++

tek_red++
@ tek_red, 0 say '      @ 580, 150 BUTTON CANCEL_' + _nnn + ' ;'
tek_red++
@ tek_red, 0 say '         CAPTION "Cancel" ;'
tek_red++
@ tek_red, 0 say '         PICTURE "frm_cancel.bmp" RIGHT ;'
tek_red++
@ tek_red, 0 say '         ACTION CancelEdit_' + _nnn + '() ;'
tek_red++
@ tek_red, 0 say '         WIDTH 100 ;'
tek_red++
@ tek_red, 0 say '         HEIGHT 40 '
tek_red++

tek_red++
@ tek_red, 0 say '   END WINDOW'
tek_red++

tek_red++
@ tek_red, 0 say '   DisableField_' + _nnn + '()'
tek_red++

tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.Browse_' + _nn + '.SetFocus'
tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.Browse_' + _nn + '.Value := ' + _table + '->(RecNo())'
tek_red++

tek_red++
@ tek_red, 0 say '   ACTIVATE WINDOW Win_' + _nn
tek_red++

tek_red++
@ tek_red, 0 say 'RETURN'
tek_red++
@ tek_red, 0 say '*:---------------------------------------------*'
tek_red++
@ tek_red, 0 say 'FUNCTION open_' + _nnn + '()'
tek_red++

_setrel = 0

select 4
dbgotop()
do while .not. eof()

   if fldatr8
      tek_red++
      @ tek_red, 0 say '   use_' + alltrim(valid_dbf)+ '()'
   endif   
   
   dbskip()
enddo

tek_red++
@ tek_red, 0 say '   Use_' + lower(_table) + '() '
tek_red++

_add = ''
select 4
dbgotop()
do while .not. eof()

if !empty(valid_dbf)

   if _setrel > 0
      _add = ' ADDITIVE '
   endif
 
   @ tek_red, 0 say '   SET RELATION TO ' + alltrim(fldname) + ' INTO ' + alltrim(valid_dbf) + _add
   tek_red++ 
 
   _setrel++
endif

dbskip()
enddo

tek_red++
@ tek_red, 0 say 'RETURN'
tek_red++
@ tek_red, 0 say '*:---------------------------------------------*'
tek_red++
@ tek_red, 0 say 'PROCEDURE DisableField_' + _nnn
tek_red++

tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.Browse_' + _nn + '.Enabled      := .T.'
tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.Query_' + _nnn + '.Visible    := .F.'
tek_red++

select 4
dbgotop()
do while .not. eof()

   if fldatr2
      _ff = 'd' + upper(alltrim(fldname))
   else
      _ff = 'm' + upper(alltrim(fldname))
   endif
   _spaces = space(  12-len(_ff) )
   
   tek_red++
   @ tek_red, 0 say '   Win_' + _nn + '.' + _ff + '.Enabled ' + _spaces + ' := .F.'
   dbskip()
enddo
tek_red++

tek_red++
@ tek_red, 0 say '   If !FiltRec '
tek_red++
@ tek_red, 0 say '      Win_' + _nn + '.lFILTER.Visible     := .F.'
tek_red++
@ tek_red, 0 say '      Win_' + _nn + '.mFILTER.Visible     := .F.'
tek_red++
@ tek_red, 0 say '      Win_' + _nn + '.FILTER_' + _nnn + '.Visible := .F.'
tek_red++
@ tek_red, 0 say '   Endif'
tek_red++

tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.Save_' + _nnn + '.Enabled     := .F.'
tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.Cancel_' + _nnn + '.Enabled   := .F.'
tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.Query_' + _nnn + '.Enabled    := .F.'
tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.Toolbar_' + _nn + '.Enabled     := .T.'
tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.Browse_' + _nn + '.SetFocus'
tek_red++

if _sum > 0

tek_red++
for _i = 1 to _sum

@ tek_red, 0 say '   Win_' + _nn + '.dSum_' + alltrim(str(_i)) + '.Enabled     := .F.'
tek_red++

next

endif

tek_red++
@ tek_red, 0 say 'RETURN'

tek_red++
@ tek_red, 0 say '*:---------------------------------------------*'

tek_red++
@ tek_red, 0 say 'PROCEDURE EnableField_' + _nnn
tek_red++

tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.Browse_' + _nn + '.Enabled      := .F.'
tek_red++

_i = 0
select 4
_uk = reccount()

dbgotop()
_fff = 'm' + upper(alltrim(fldname))

do while .not. eof()
   _i++
   _ff = 'm' + upper(alltrim(fldname))
   _spaces = space( 12 - len(_ff) )
   
   if fldatr2
      dbskip()
      loop
   endif
      
   tek_red++
   if _i = 2 .or. _uk = 1
      _fff = 'm' + upper(alltrim(fldname))
   endif
   
  if fldatr4 
     @ tek_red, 0 say '   Win_' + _nn + '.' + _ff + '.Enabled ' + _spaces + ' := .T.'
  else
  
     tek_red++
     @ tek_red, 0 say '   If EditRec'
     tek_red++  
     @ tek_red, 0 say '      Win_' + _nn + '.' + _ff + '.Enabled ' + _spaces + ' := .F.'
     tek_red++
     @ tek_red, 0 say '   Else'
     tek_red++
     @ tek_red, 0 say '      Win_' + _nn + '.' + _ff + '.Enabled ' + _spaces + ' := .T.'
     tek_red++
     @ tek_red, 0 say '   Endif'
    
  endif
  
dbskip()
enddo
tek_red++

tek_red++
@ tek_red, 0 say '   If FiltRec '
tek_red++
@ tek_red, 0 say '      Win_' + _nn + '.lFILTER.Visible     := .T.'
tek_red++
@ tek_red, 0 say '      Win_' + _nn + '.mFILTER.Visible     := .T.'
tek_red++
@ tek_red, 0 say '      Win_' + _nn + '.FILTER_' + _nnn + '.Visible := .T.'
tek_red++
@ tek_red, 0 say '   Else '
tek_red++
@ tek_red, 0 say '      Win_' + _nn + '.lFILTER.Visible     := .F.'
tek_red++
@ tek_red, 0 say '      Win_' + _nn + '.mFILTER.Visible     := .F.'
tek_red++
@ tek_red, 0 say '      Win_' + _nn + '.FILTER_' + _nnn + '.Visible := .F.'
tek_red++
tek_red++
@ tek_red, 0 say '      Win_' + _nn + '.lFILTER.Enabled     := .F.'
tek_red++
@ tek_red, 0 say '      Win_' + _nn + '.mFILTER.Enabled     := .F.'
tek_red++
@ tek_red, 0 say '      Win_' + _nn + '.FILTER_' + _nnn + '.Enabled := .F.'
tek_red++

tek_red++
@ tek_red, 0 say '      IF !empty ( Win_' + _nn + '.mFILTER.Value )'
tek_red++
@ tek_red, 0 say '         Win_' + _nn + '.mFILTER.Visible  := .T.'
tek_red++
@ tek_red, 0 say '      Endif'
tek_red++

tek_red++
@ tek_red, 0 say '   Endif '
tek_red++

tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.Save_' + _nnn + '.Enabled     := .T.'
tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.Cancel_' + _nnn + '.Enabled   := .T.'
tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.Query_' + _nnn + '.Enabled    := .F.'
tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.Toolbar_' + _nn + '.Enabled     := .F.'
tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.' + _fff + '.SetFocus'
tek_red++

tek_red++
@ tek_red, 0 say 'RETURN'

tek_red++
@ tek_red, 0 say '*:---------------------------------------------*'

tek_red++
@ tek_red, 0 say 'FUNCTION RecordStatus_' + _nnn + '()'
tek_red++

tek_red++
@ tek_red, 0 say '   Local RetVal'
tek_red++

tek_red++
@ tek_red, 0 say '   ' + _table + '->( dbGoTo ( Win_' + _nn + '.Browse_' + _nn + '.Value ) )'
tek_red++

tek_red++
@ tek_red, 0 say '   IF ' + _table + '->(RLock())'
tek_red++
@ tek_red, 0 say '      RetVal := .T.'
tek_red++
@ tek_red, 0 say '   ELSE'
tek_red++
@ tek_red, 0 say '      MsgExclamation ("Record LOCKED, try again later")'
tek_red++
@ tek_red, 0 say '      RetVal := .F.'
tek_red++
@ tek_red, 0 say '   ENDIF'
tek_red++

tek_red++
@ tek_red, 0 say 'RETURN RetVal'

tek_red++
@ tek_red, 0 say '*:---------------------------------------------*'

tek_red++
@ tek_red, 0 say 'PROCEDURE LoadData_' + _nnn 
tek_red++

tek_red++
@ tek_red, 0 say '   ' + _table + '->( dbGoTo ( Win_' + _nn + '.Browse_' + _nn + '.Value ) )'
tek_red++

select 4
dbgotop()
do while .not. eof()

   if fldatr2
      dbskip()
      loop
   endif

   _ff = 'm' + upper(alltrim( fldname ))
   _spaces = space ( 12 - len( _ff) )

   tek_red++
   @ tek_red, 0 say '   Win_' + _nn + '.' + _ff + '.Value ' + _spaces + ' := ' + _table + '->' + fldname

   if fldatr8
      tek_red++
      tek_red++
      @ tek_red, 0 say '   SELECT ' + alltrim(lower(valid_dbf))
      tek_red++
      @ tek_red, 0 say '   SEEK Win_' + _nn + '.m' + alltrim(upper(fldname)) + '.Value'
      tek_red++
      @ tek_red, 0 say '   IF FOUND()'
      tek_red++
      @ tek_red, 0 say '      Win_' + _nn + '.d' + alltrim(upper(valid_dsp)) + '.Value := ' + alltrim(upper(valid_fld))
      tek_red++
      @ tek_red, 0 say '   ELSE'
      tek_red++
      @ tek_red, 0 say '      Win_' + _nn + '.d' + alltrim(upper(valid_dsp)) + '.Value := "???"'
      tek_red++
      @ tek_red, 0 say '   ENDIF'
      tek_red++
      tek_red++
      @ tek_red, 0 say '   SELECT ' + alltrim(lower(dbfname))
   endif
   
dbskip()
enddo
tek_red++

tek_red++
@ tek_red, 0 say 'RETURN'

tek_red++
@ tek_red, 0 say '*:---------------------------------------------*'

tek_red++
@ tek_red, 0 say 'PROCEDURE CancelEdit_' + _nnn 
tek_red++

tek_red++
@ tek_red, 0 say '   DisableField_' + _nnn + '()'
tek_red++
@ tek_red, 0 say '   LoadData_' + _nnn + '()'
tek_red++
@ tek_red, 0 say '   UNLOCK'
tek_red++
@ tek_red, 0 say '   NewRec := .F.'
tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.Browse_' + _nn + '.SetFocus'
tek_red++

tek_red++
@ tek_red, 0 say 'RETURN'

tek_red++
@ tek_red, 0 say '*:---------------------------------------------*'

tek_red++
@ tek_red, 0 say 'PROCEDURE SaveRecord_' + _nnn 
tek_red++

tek_red++
@ tek_red, 0 say '   Local NewRecNo'
tek_red++

tek_red++
@ tek_red, 0 say '   DisableField_' + _nnn + '()'
tek_red++

tek_red++
@ tek_red, 0 say '   IF NewRec == .T.'
tek_red++
@ tek_red, 0 say '      ' + _table + '->(dbAppend())'
tek_red++
@ tek_red, 0 say '      NewRec := .F.'
tek_red++
@ tek_red, 0 say '   ELSE'
tek_red++
@ tek_red, 0 say '      ' + _table + '->(dbGoto ( Win_' + _nn + '.Browse_' + _nn + '.Value ) )'
tek_red++
@ tek_red, 0 say '   ENDIF'
tek_red++

tek_red++
@ tek_red, 0 say '   NewRecNo := ' + _table + '->( RecNo() )'
tek_red++

select 4
dbgotop()
do while .not. eof()

   if dbfname = '$'
      dbskip()
      loop
   endif

   if fldatr7
      dbskip()
      loop
   endif

   _ff = 'm' + upper(alltrim(fldname))

   tek_red++
   @ tek_red, 0 say '   ' + _table + '->' + padr(fldname,10) + ' := Win_' + _nn + '.' + _ff + '.Value'

   dbskip()
enddo
tek_red++

tek_red++
@ tek_red, 0 say '   Win_' + _nn +'.Browse_' + _nn + '.Refresh'
tek_red++
@ tek_red, 0 say '   IF NewRec == .T.'
tek_red++
@ tek_red, 0 say '      Win_' + _nn + '.Browse_' + _nn + '.Value := NewRecNo '
tek_red++
@ tek_red, 0 say '   ENDIF'
tek_red++

tek_red++
@ tek_red, 0 say '   UNLOCK'
tek_red++
@ tek_red, 0 say '   dbCommitall()'
tek_red++

if _sum >0
tek_red++
@ tek_red, 0 say '   sum_' + _nnn + '()'
tek_red++
endif

tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.StatusBar.Item(1) := "Save Record" '
tek_red++

tek_red++
@ tek_red, 0 say 'RETURN'

tek_red++
@ tek_red, 0 say '*:---------------------------------------------*'

tek_red++
@ tek_red, 0 say 'PROCEDURE NewRecord_' + _nnn 
tek_red++

tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.StatusBar.Item(1) := "Inserting" '
tek_red++

tek_red++
@ tek_red, 0 say '   SET ORDER TO 1'
tek_red++
@ tek_red, 0 say '   dbGoBottom()'
tek_red++

_i = 0
select 4
dbgotop()
do while .not. eof()

   if dbfname = '$'
      dbskip()
      loop
   endif

   if fldatr7
      dbskip()
      loop
   endif

   _i++
   _flddef = alltrim(flddef)

   if fldtype = 'C'
     _flddef = chr(34) + alltrim(flddef) + chr(34)
   endif
      
   _ff = 'm' + upper(alltrim(fldname))
   _spaces = space ( 12 - len(_ff ))

    if _i = 1
      _fff = 'm' + upper(alltrim(fldname))
   endif
      
   tek_red++
   @ tek_red, 0 say '   Win_' + _nn + '.' + _ff + '.Value ' + _spaces + ' := ' + _flddef

   dbskip()
enddo
tek_red++

tek_red++
@ tek_red, 0 say '   EnableField_' + _nnn + '()'
tek_red++

tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.' + _fff + '.SetFocus'
tek_red++

tek_red++
@ tek_red, 0 say 'RETURN'

tek_red++
@ tek_red, 0 say '*:---------------------------------------------*'

tek_red++
@ tek_red, 0 say 'PROCEDURE DeleteRecord_' + _nnn 
tek_red++

tek_red++
@ tek_red, 0 say '   IF MsgYesNo ( "Are you sure do you want delete record?" )'
tek_red++
@ tek_red, 0 say '      IF ' + _table + '->(FLock())'
tek_red++
@ tek_red, 0 say '         DELETE'
tek_red++
@ tek_red, 0 say '         Win_' + _nn + '.Browse_' + _nn + '.Refresh'
tek_red++
@ tek_red, 0 say '         UNLOCK'
tek_red++
@ tek_red, 0 say '      ENDIF'
tek_red++
@ tek_red, 0 say '   ENDIF'
tek_red++

tek_red++
@ tek_red, 0 say 'RETURN'

tek_red++
@ tek_red, 0 say '*:---------------------------------------------*'

tek_red++
@ tek_red, 0 say 'PROCEDURE Find_' + _nnn 
tek_red++

tek_red++
@ tek_red, 0 say '   FindRec := .T. '
tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.mFILTER.Value := space(60)'
tek_red++

tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.StatusBar.Item(1)  := "Query" '
tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.Query_' + _nnn + '.Visible := .T.'
tek_red++

_polj = 0
_setfoc = ''

select 4
dbgotop()
do while .not. eof()

   if !fldatr5
      dbskip()
      loop
   endif

   _polj++ 
   if _polj = 1
      _setfoc = alltrim(fldname)
   endif   
     
   _ff = 'm' + upper(alltrim(fldname))
   _spaces = space ( 12 - len(_ff))
   _defval = alltrim(flddef)
   
   if fldtype = 'C'
      _defval = '""'
   endif
      
   if fldtype = 'D'
      _defval = 'CTOD("")'
   endif
         
   tek_red++
   @ tek_red, 0 say '   Win_' + _nn + '.' + _ff + '.Value ' + _spaces + ':= ' + _defval
   
   dbskip()
enddo
tek_red++

tek_red++
@ tek_red, 0 say '   EnableField_' + _nnn + '()'
tek_red++
@ tek_red, 0 say '   Win_' + _nn  + '.Save_' + _nnn + '.Enabled  := .F.'
tek_red++
@ tek_red, 0 say '   Win_' + _nn  + '.Query_' + _nnn + '.Enabled := .T.'
tek_red++
@ tek_red, 0 say '   Win_' + _nn  + '.m' + _setfoc + '.SetFocus'
tek_red++

tek_red++
@ tek_red, 0 say 'RETURN'

tek_red++
@ tek_red, 0 say '*:---------------------------------------------*'

tek_red++
@ tek_red, 0 say 'PROCEDURE PrintData_' + _nnn 
tek_red++

tek_red++
@ tek_red, 0 say '   Local RecRec '
tek_red++

_hdr1 = ''
_hdr2 = ''
_fld1 = ''
_wid1 = ''
_tot1 = ''
_ima = 0

select 4
dbgotop()
do while .not. eof()

if fldatr6
   _hdr1 = _hdr1 + '"",'
   _hdr2 = _hdr2 + '"' + alltrim(fldlabel) + '",'
   _fld1 = _fld1 + '"' + alltrim(fldname) + '",'
   _siri = max ( len(alltrim(fldlabel)), fldlen )
   _wid1 = _wid1 + alltrim(str(_siri+1))+','
   _tot1 = _tot1 + '.F.,'
   _ima++
endif

dbskip()
enddo

if _ima > 0
   _duzh1 = len(_hdr1)
   _duzh2 = len(_hdr2)
   _duzf1 = len(_fld1)
   _duzw1 = len(_wid1)
   _duzt1 = len(_tot1)
   
   _hdr1 = substr(_hdr1,1,_duzh1-1)
   _hdr2 = substr(_hdr2,1,_duzh2-1)
   _fld1 = substr(_fld1,1,_duzf1-1)   
   _wid1 = substr(_wid1,1,_duzw1-1)      
   _tot1 = substr(_tot1,1,_duzt1-1)   
endif

tek_red++
@ tek_red, 0 say '   RecRec := ' + _table + '->( RecNo())'
tek_red++
@ tek_red, 0 say '   dbGoTop()'
tek_red++
@ tek_red, 0 say '   DO REPORT ;'
tek_red++
@ tek_red, 0 say '      TITLE "' + _table + '" ;'
tek_red++
@ tek_red, 0 say '      HEADERS { ' + _hdr1 + ' }, { ' + _hdr2 + ' } ;'
tek_red++
@ tek_red, 0 say '      FIELDS { ' + _fld1 + ' } ;' 
tek_red++
@ tek_red, 0 say '      WIDTHS { ' + _wid1  + ' } ;'
tek_red++
@ tek_red, 0 say '      TOTALS { ' + _tot1 + ' } ;'
tek_red++
@ tek_red, 0 say '      WORKAREA ' + _table + ' ;'
tek_red++
@ tek_red, 0 say '      LPP 50 ;'
tek_red++
@ tek_red, 0 say '      CPL 80 ;'
tek_red++
@ tek_red, 0 say '      LMARGIN 5 ;'
tek_red++
@ tek_red, 0 say '      PREVIEW'
tek_red++

@ tek_red, 0 say '   ' + _table + '->(dbGoTo(RecRec))'
tek_red++

tek_red++
@ tek_red, 0 say 'RETURN'
tek_red++
@ tek_red, 0 say '*:---------------------------------------------*'
tek_red++
@ tek_red, 0 say 'PROCEDURE PaintDisplay_' + _nnn 
tek_red++

*** labels ***

select 4
dbgotop()
do while .not. eof()
_ff = alltrim(str(fldseq))

if fldtype = 'L'
   dbskip()
   loop
endif

tek_red++
@ tek_red, 0 say '   @ ' + alltrim(str(fldrow+labrow)) + ', '  + alltrim(str(fldcol+labcol)) +' LABEL Label_' + _ff + ' VALUE "' + alltrim(fldlabel) + '" TRANSPARENT '  
dbskip()
enddo

tek_red++

*** textbox ***

_rbr = 0

select 4
dbgotop()
do while .not. eof()

_rbr++
_disp_only = .F.
_ff = 'm' + upper(alltrim(fldname))
_spaces = space ( 12 - len(_ff))
_type = ''
_width = ''
_format = ''

if dbfname = '$'
   _ff = 'd' + upper(alltrim(fldname))
   _disp_only = .T.
endif

_fldlen = fldlen
IF _fldlen < 5
  _fldlen++
endif

do case
   case fldtype = 'N'
        _ctrl = ' TEXTBOX '           
        _type = ' NUMERIC INPUTMASK '   
        _width = ' WIDTH ' + alltrim(str(_fldlen*10))
        _format = '"'+alltrim(fldpict)+'"'
		
   case fldtype = 'C'
        _ctrl = ' TEXTBOX '           
        _type = ''  //' INPUTMASK '   
        _fldpict = strtran(fldpict,'X','!')
        _width = ' WIDTH ' + alltrim(str(_fldlen*10))
        _format = ' UPPERCASE ' // '"'+alltrim(_fldpict)+'"'
        if empty(fldpict)
           _format = '' 
           _type = '' 
        endif

   case fldtype = 'D'
        _ctrl = ' TEXTBOX '           
        _type = ' DATE '   
        _width = ' WIDTH 80' 
        _format = ''

   case fldtype = 'L'
        _ctrl = ' CHECKBOX '           
        _type = ' CAPTION '   
        _width = '' 
        _format = '"' + alltrim(fldlabel) + '"'

   case fldtype = 'M'
        _ctrl = ' EDITBOX '           
        _type = ' '   
        _width = ' WIDTH 400 ' 
        _format = ' HEIGHT 100'
       
endcase

if _disp_only
   _format = ''
endif

_valid = ''
if fldatr8
   _num = _nn + '_' + alltrim(str(_rbr))
   _valid = _valid + ' on enter valid_' + _num + '("E") on lostfocus valid_' + _num + '("F")'
endif

tek_red++
@ tek_red, 0 say '   @ ' + alltrim(str(fldrow)) + ', '  + alltrim(str(fldcol)) + _ctrl + ' ' + _ff + _spaces + _width + _type + _format + _valid
dbskip()
enddo
tek_red++

tek_red++
@ tek_red, 0 say 'RETURN'

tek_red++
@ tek_red, 0 say '*:---------------------------------------------*'
tek_red++
@ tek_red, 0 say 'PROCEDURE Head1_' + _nnn 
tek_red++

tek_red++
@ tek_red, 0 say '   SELECT ' + _table
tek_red++
@ tek_red, 0 say '   SET ORDER TO 1'
tek_red++
@ tek_red, 0 say '   dbGotop()'

tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.Browse_' + _nn + '.Value := RecNo()' 
tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.Browse_' + _nn + '.Refresh' 
tek_red++
@ tek_red, 0 say '   LoadData_' + _nnn + '()' 
tek_red++

tek_red++
@ tek_red, 0 say 'RETURN'

tek_red++
@ tek_red, 0 say '*:---------------------------------------------*'
tek_red++
@ tek_red, 0 say 'PROCEDURE Head2_' + _nnn 
tek_red++

tek_red++
@ tek_red, 0 say '   SELECT ' + _table
tek_red++
@ tek_red, 0 say '   SET ORDER TO 2'
tek_red++
@ tek_red, 0 say '   dbGotop()'

tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.Browse_' + _nn + '.Value := RecNo()' 
tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.Browse_' + _nn + '.Refresh' 
tek_red++
@ tek_red, 0 say '   LoadData_' + _nnn + '()' 
tek_red++

tek_red++
@ tek_red, 0 say 'RETURN'
tek_red++
@ tek_red, 0 say '*:---------------------------------------------*'
tek_red++
@ tek_red, 0 say 'PROCEDURE QueryRecord_' + _nnn 
tek_red++

tek_red++
@ tek_red, 0 say '   PreQuery_' + _nnn + '()'
tek_red++

tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.lFILTER.Visible     := .T. '
tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.mFILTER.Visible     := .T. '
tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.FILTER_' + _nnn + '.Visible := .T. '
tek_red++

tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.lFILTER.Enabled     := .T. '
tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.mFILTER.Enabled     := .T. '
tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.FILTER_' + _nnn + '.Enabled := .T. '
tek_red++

tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.mFILTER.Value := _qry_exp '
tek_red++

tek_red++
@ tek_red, 0 say '   SET FILTER TO ' + '&' + '_qry_exp'
tek_red++
@ tek_red, 0 say '   dbGotop()'
tek_red++

tek_red++
@ tek_red, 0 say '   IF ! EMPTY( _qry_exp )'
tek_red++
@ tek_red, 0 say '      COUNT TO found_rec FOR ' + '&' + '_qry_exp'
tek_red++
@ tek_red, 0 say '      dbGotop()'
tek_red++

tek_red++
@ tek_red, 0 say '      IF found_rec = 0'
tek_red++
@ tek_red, 0 say '         Win_' + _nn + '.Statusbar.Item(1) := "Not found!"'
tek_red++
@ tek_red, 0 say '      ELSE'
tek_red++
@ tek_red, 0 say '         Win_' + _nn + '.Statusbar.Item(1) := "Found " + ALLTRIM(STR(found_rec)) + ' + '" record(s)!"'
tek_red++
@ tek_red, 0 say '      ENDIF'
tek_red++
@ tek_red, 0 say '   ENDIF'
tek_red++
 
tek_red++
@ tek_red, 0 say '   DisableField_' + _nnn + '()'
tek_red++

tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.Browse_' + _nn + '.Refresh'
tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.Browse_' + _nn + '.Enabled   := .T.'
tek_red++

tek_red++
@ tek_red, 0 say 'RETURN'
tek_red++
@ tek_red, 0 say '*:---------------------------------------------*'
tek_red++
@ tek_red, 0 say 'PROCEDURE PreQuery_' + _nnn 
tek_red++

tek_red++
@ tek_red, 0 say '_qry_exp := ""'
tek_red++
@ tek_red, 0 say '_ima_filter := .F.'
tek_red++
@ tek_red, 0 say 'FiltRec := .T.'
tek_red++

select 4
dbgotop()
do while .not. eof()

   if dbfname = '$'
      dbskip()
      loop
   endif

if fldatr7
   dbskip()
   loop
endif

* _ff = alltrim(str(fldseq))
_ff = 'm' + upper(alltrim(fldname))
_fname = upper(alltrim(fldname))

do case
   case fldtype = 'N'

   tek_red++
   @ tek_red, 0 say 'IF ! EMPTY ( Win_' + _nn + '.' + _ff + '.Value )     // '  + _fname
   tek_red++
   @ tek_red, 0 say '   IF _ima_filter'
   tek_red++
   @ tek_red, 0 say '      _qry_exp = _qry_exp + ' + '" .AND. "'
   tek_red++
   @ tek_red, 0 say '   ENDIF'
   tek_red++
   @ tek_red, 0 say '      _qry_exp = _qry_exp + ' + '"' + _fname + ' = " + STR( Win_' + _nn + '.' + _ff + '.Value )'
   tek_red++
   @ tek_red, 0 say '      _ima_filter := .T.'
   tek_red++
   @ tek_red, 0 say 'ENDIF'
   tek_red++
 
   case fldtype = 'C'

   tek_red++
   @ tek_red, 0 say 's' + _fname + ' := Win_' + _nn + '.' + _ff + '.Value'
   tek_red++
   @ tek_red, 0 say 'IF ! EMPTY ( s' + _fname + ' )     // '  + _fname
   tek_red++
   @ tek_red, 0 say '   IF _ima_filter'
   tek_red++
   @ tek_red, 0 say '      _qry_exp = _qry_exp + ' + '" .AND. "'
   tek_red++
   @ tek_red, 0 say '   ENDIF'
   tek_red++
   @ tek_red, 0 say '   IF AT ( "%", s' + _fname + ' ) > 0'
   tek_red++
   @ tek_red, 0 say '      s' + _fname + ' = strtran( s' + _fname + ', "%","" )'
   tek_red++
   @ tek_red, 0 say '      _qry_exp = _qry_exp + ' + '"IF(AT(' + chr(39) + chr(34) + ' + s' + _fname + ' + ' + chr(34) + chr(39) + ', ' + _fname + ')>0,.T.,.F.)"'
   tek_red++
   @ tek_red, 0 say '   ELSE'
   tek_red++
   @ tek_red, 0 say '      _qry_exp = _qry_exp + ' + '"' + _fname + ' = " + chr(34) + Win_' + _nn + '.' + _ff + '.Value + chr(34)'
   tek_red++
   @ tek_red, 0 say '   ENDIF'
   tek_red++
   @ tek_red, 0 say '   _ima_filter := .T.'
   tek_red++
   @ tek_red, 0 say 'ENDIF'
   tek_red++

   case fldtype = 'D'

   tek_red++
   @ tek_red, 0 say 'IF ! EMPTY ( Win_' + _nn + '.' + _ff + '.Value )     // '  + _fname
   tek_red++
   @ tek_red, 0 say '   IF _ima_filter'
   tek_red++
   @ tek_red, 0 say '      _qry_exp = _qry_exp + ' + '" .AND. "'
   tek_red++
   @ tek_red, 0 say '   ENDIF'
   tek_red++
   @ tek_red, 0 say '      _qry_exp = _qry_exp + ' + '"' + _fname + ' = " + "CTOD(" + chr(34) + DTOC(Win_' + _nn + '.' + _ff + '.Value) + chr(34) + ")"' 
   tek_red++
   @ tek_red, 0 say '      _ima_filter := .T.'
   tek_red++
   @ tek_red, 0 say 'ENDIF'
   tek_red++

endcase

dbskip()
enddo

tek_red++
@ tek_red, 0 say 'RETURN'
tek_red++
@ tek_red, 0 say '*:*********************************'
tek_red++
@ tek_red, 0 say 'PROCEDURE DoFilter_' + _nnn 
tek_red++

tek_red++
@ tek_red, 0 say '   _qry_exp := Win_' + _nn + '.mFILTER.Value '
tek_red++

tek_red++
@ tek_red, 0 say '   SET FILTER TO ' + '&' + '_qry_exp'
tek_red++
@ tek_red, 0 say '   dbGotop()'
tek_red++

tek_red++
@ tek_red, 0 say '   IF ! EMPTY( _qry_exp )'
tek_red++
@ tek_red, 0 say '      COUNT TO found_rec FOR ' + '&' + '_qry_exp'
tek_red++
@ tek_red, 0 say '      dbGotop()'
tek_red++

tek_red++
@ tek_red, 0 say '      IF found_rec = 0'
tek_red++
@ tek_red, 0 say '         Win_' + _nn + '.Statusbar.Item(1) := "Not found!"'
tek_red++
@ tek_red, 0 say '      ELSE'
tek_red++
@ tek_red, 0 say '         Win_' + _nn + '.Statusbar.Item(1) := "Found " + ALLTRIM(STR(found_rec)) + ' + '" record(s)!"'
tek_red++
@ tek_red, 0 say '      ENDIF'
tek_red++
@ tek_red, 0 say '   ENDIF'
tek_red++
 
tek_red++
@ tek_red, 0 say '   DisableField_' + _nnn + '() '
tek_red++

tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.Browse_' + _nn + '.Refresh '
tek_red++
@ tek_red, 0 say '   Win_' + _nn + '.Browse_' + _nn + '.Enabled := .T. '
tek_red++

tek_red++
@ tek_red, 0 say 'RETURN'
tek_red++
@ tek_red, 0 say '*:*********************************'
tek_red++

_rbr = 0
_val = 0

select 4
dbgotop()
do while .not. eof()

_rbr++

if fldatr8
   @ tek_red, 0 say 'FUNCTION valid_' + _nn + '_' + alltrim(str(_rbr)) + ' ( _p1 )'
   tek_red++
   
   tek_red++
   @ tek_red, 0 say '   IF FindRec '
   tek_red++
   @ tek_red, 0 say '      RETURN .T. '
   tek_red++
   @ tek_red, 0 say '   ENDIF '
   tek_red++
   
   tek_red++
   @ tek_red, 0 say 'SELECT ' + lower(valid_dbf)
   tek_red++
   @ tek_red, 0 say 'SEEK Win_' + _nn + '.m' + alltrim(upper(fldname)) + '.Value'
   tek_red++
   @ tek_red, 0 say 'IF FOUND()'
   tek_red++
   @ tek_red, 0 say '   Win_' + _nn + '.d' + alltrim(upper(valid_dsp)) + '.Value := ' + upper(valid_fld)
   tek_red++
   @ tek_red, 0 say '   SELECT ' + lower(dbfname)
   tek_red++
   @ tek_red, 0 say '   RETURN .T.'
   tek_red++
   @ tek_red, 0 say 'ELSE'
   tek_red++
   @ tek_red, 0 say '   IF _p1 = "E"'
   tek_red++
   @ tek_red, 0 say '      SEEK Win_' + _nn + '.m' + alltrim(upper(fldname)) + '.Value '
   tek_red++
   @ tek_red, 0 say '      IF !FOUND()'
   tek_red++
   @ tek_red, 0 say '         Win_' + _nn + '.m' + alltrim(upper(fldname)) + '.Value := lovs_func ( "' +  alltrim(upper(valid_dbf)) + '","' + alltrim(upper(valid_key)) + '","' + alltrim(upper(valid_fld)) + '" )'
   tek_red++
   @ tek_red, 0 say '      ENDIF'
   tek_red++
   
   tek_red++
   @ tek_red, 0 say '      dbcloseall()'
   tek_red++
   @ tek_red, 0 say '      open_' + _nnn + '()'
   tek_red++
   /*
   tek_red++
   @ tek_red, 0 say '      SEEK Win_' + _nn + '.m' + alltrim(upper(fldname)) + '.Value '
   */
   tek_red++
   @ tek_red, 0 say '      SELECT ' + lower(dbfname)
   tek_red++
   @ tek_red, 0 say '      RETURN .T.'
   tek_red++
   @ tek_red, 0 say '   ENDIF'
   tek_red++
   @ tek_red, 0 say 'ENDIF'
   tek_red++

   tek_red++
   @ tek_red, 0 say 'RETURN .F.'
   tek_red++
   @ tek_red, 0 say '*:***********************************'
   tek_red++
   
   _val++
endif

dbskip()
enddo

if _sum > 0

@ tek_red, 0 say 'FUNCTION sum_' + _nnn + '()'
tek_red++

tek_red++
_i = 0
select 4
dbgotop()
do while .not. eof()

   if !fldatr7
      dbskip()
      loop
   endif

   _i++
   @ tek_red, 0 say '   Sum ' + fldname + ' TO sum_' + alltrim(str(_i))
   tek_red++
   
dbskip()
enddo

tek_red++
for _i = 1 to _sum

   @ tek_red, 0 say '   Win_' + _nn + '.dSum_' + alltrim(str(_i)) + '.Value := sum_' + alltrim(str(_i))
   tek_red++

next

tek_red++
@ tek_red, 0 say 'RETURN 0'
tek_red++

endif

set printer to 
set device to screen
setprc(0,0)
/*
*** ima valid funkcija ***
if _val > 0

_lov_prg = 'lov_' + _nn + '.prg'

tek_red = 0

set device to printer
set printer to &_lov_prg

select 4
dbgotop()

_rbr = 0

do while .not. eof()

_rbr++

if !fldatr8
   dbskip()
   loop
endif

*tek_red++
@ tek_red, 0 SAY '#include "hmg.ch"'
tek_red++

_nnv = alltrim(str(_rbr))

tek_red++
@ tek_red, 0 SAY 'FUNCTION lov_' + _nn + '_' + _nnv + '()'
tek_red++

tek_red++
@ tek_red, 0 SAY 'SELECT ' + lower(alltrim(valid_dbf))

tek_red++
@ tek_red, 0 SAY '* USE ' + lower(alltrim(valid_dbf)) + ' INDEX  ' + lower(alltrim(valid_key)) + ', ' + lower(alltrim(valid_fld))

tek_red++
@ tek_red, 0 SAY '_redova = reccount()'

tek_red++
@ tek_red, 0 SAY '_red = 0'

tek_red++
tek_red++
@ tek_red, 0 SAY 'PUBLIC aRows [_redova] [4], _RetVal'
tek_red++
@ tek_red, 0 SAY 'PUBLIC cPublicSearchString := ""'
tek_red++

tek_red++
@ tek_red, 0 SAY 'SET ORDER TO 2'
tek_red++
@ tek_red, 0 SAY 'dbgotop()'
tek_red++

tek_red++
@ tek_red, 0 SAY 'DO WHILE .not. eof()'

tek_red++
@ tek_red, 0 SAY '   _red++'
tek_red++
@ tek_red, 0 SAY '   _fld1 = str(' + alltrim(valid_key) + ')'
tek_red++
@ tek_red, 0 SAY '   _fld2 = ' + alltrim(valid_fld)
tek_red++
@ tek_red, 0 SAY '   aRows [_red]:= { _fld1, _fld2, str(_red), str(recno()) }'

tek_red++
@ tek_red, 0 SAY '   dbskip()'
tek_red++
@ tek_red, 0 SAY 'ENDDO'
tek_red++

tek_red++
@ tek_red, 0 SAY '   DEFINE WINDOW Lov_Form_' + _nnv + ' ; '
tek_red++
@ tek_red, 0 SAY '      AT 0,0 ; '
tek_red++
@ tek_red, 0 SAY '      WIDTH 500 ; '
tek_red++
@ tek_red, 0 SAY '      HEIGHT 300 ; '
tek_red++
@ tek_red, 0 SAY '      TITLE "Search in grid " ; '
tek_red++
@ tek_red, 0 SAY '      MODAL  '
tek_red++

tek_red++
@ tek_red, 0 SAY '      @  10, 10 LABEL L1 ; '
tek_red++
@ tek_red, 0 SAY '         WIDTH 80 ; '
tek_red++
@ tek_red, 0 SAY '         HEIGHT 20 ; '
tek_red++
@ tek_red, 0 SAY '         VALUE "Search string:" '
tek_red++

tek_red++
@ tek_red, 0 SAY '      @  10, 100 Textbox WhatToSearch ; '
tek_red++
@ tek_red, 0 SAY '         WIDTH 95 ; '
tek_red++
@ tek_red, 0 SAY '         HEIGHT 20 ; '
tek_red++
@ tek_red, 0 SAY '         VALUE "???" ; '
tek_red++
@ tek_red, 0 SAY '         INPUTMASK "!!!!!!!!!" '
tek_red++

tek_red++
@ tek_red, 0 SAY '      @  10, 200 BUTTON go ; '
tek_red++
@ tek_red, 0 SAY '         CAPTION "OK" ; '
tek_red++
@ tek_red, 0 SAY '         ACTION GoSearch_' + _nnv + '() ; '
tek_red++
@ tek_red, 0 SAY '         WIDTH 50 ; '
tek_red++
@ tek_red, 0 SAY '         HEIGHT 20 '
tek_red++

tek_red++
@ tek_red, 0 SAY '      @  40,10 GRID Lov_Grid_' + _nnv + ' ; '
tek_red++
@ tek_red, 0 SAY '         WIDTH 370 ; '
tek_red++
@ tek_red, 0 SAY '         HEIGHT 210 ; '
tek_red++
@ tek_red, 0 SAY '         HEADERS {"Key", "Name", "Record", "Recno()" } ; '
tek_red++
@ tek_red, 0 SAY '         WIDTHS {100,200,100,100} ; '
tek_red++
@ tek_red, 0 SAY '         ITEMS aRows ; '
tek_red++
@ tek_red, 0 SAY '         VALUE 1 ; '
tek_red++
@ tek_red, 0 SAY '         ON DBLCLICK select_row_' + _nnv + '() ; '
tek_red++
@ tek_red, 0 SAY '         JUSTIFY { GRID_JTFY_LEFT,GRID_JTFY_LEFT, GRID_JTFY_RIGHT, GRID_JTFY_RIGHT } '
tek_red++

tek_red++
@ tek_red, 0 SAY '   END WINDOW '
tek_red++

tek_red++
@ tek_red, 0 SAY '   Lov_Form_' + _nnv + '.Lov_Grid_' + _nnv + '.SetFocus '
tek_red++

tek_red++
@ tek_red, 0 SAY '   CENTER WINDOW Lov_Form_' + _nnv
tek_red++

tek_red++
@ tek_red, 0 SAY '   CREATE EVENT PROCNAME Proc_OnKey_' + _nnv + '() HWND Lov_Form_' + _nnv + '.Lov_Grid_' + _nnv + '.HANDLE '
tek_red++

tek_red++
@ tek_red, 0 SAY '   ACTIVATE WINDOW Lov_Form_' + _nnv 
tek_red++

tek_red++
@ tek_red, 0 SAY 'RETURN _Retval '
tek_red++
@ tek_red, 0 SAY '*:**********************************************'
tek_red++
@ tek_red, 0 SAY 'FUNCTION Proc_OnKey_' + _nnv + '() '
tek_red++
@ tek_red, 0 SAY '   STATIC flag := .F. '
tek_red++
@ tek_red, 0 SAY '   LOCAL hWnd, ch, i '
tek_red++
@ tek_red, 0 SAY '   LOCAL cLocalSearchString '
tek_red++

tek_red++
@ tek_red, 0 SAY '   IF flag == .T. '
tek_red++
@ tek_red, 0 SAY '      RETURN NIL ' 
tek_red++
@ tek_red, 0 SAY '   ENDIF '
tek_red++

tek_red++
@ tek_red, 0 SAY '   flag := .T. '
tek_red++
@ tek_red, 0 SAY '   ch := HMG_GetLastCharacter(@hWnd) '
tek_red++
@ tek_red, 0 SAY '   cLocalSearchString := cPublicSearchString + upper(ch) '
tek_red++

tek_red++
@ tek_red, 0 SAY '   IF hWnd == GetControlHandle ("Lov_Grid_' + _nnv + '","Lov_Form_' + _nnv + '")'
tek_red++
@ tek_red, 0 SAY '      IF (asc(ch)>31 .and. asc(ch)<128) '
tek_red++
@ tek_red, 0 SAY '         HMG_CleanLastCharacter() '
tek_red++

tek_red++
@ tek_red, 0 SAY '         dbgotop() '
tek_red++
@ tek_red, 0 SAY '         SEEK cLocalSearchString '
tek_red++
@ tek_red, 0 SAY '         IF found() '
tek_red++
@ tek_red, 0 SAY '            _rec = recno() '
tek_red++
@ tek_red, 0 SAY '            _niz = 0 '
tek_red++

tek_red++
@ tek_red, 0 SAY '            FOR ii = 1 TO _redova '
tek_red++
@ tek_red, 0 SAY '              IF val(aRows[ii][4]) = _rec '
tek_red++
@ tek_red, 0 SAY '                  i = val(aRows[ii][3]) '
tek_red++
@ tek_red, 0 SAY '                  EXIT '
tek_red++
@ tek_red, 0 SAY '              ENDIF '
tek_red++
@ tek_red, 0 SAY '            NEXT '
tek_red++
@ tek_red, 0 SAY '         ELSE '
tek_red++
@ tek_red, 0 SAY '            msginfo("Not found") '
tek_red++
@ tek_red, 0 SAY '            _len = len(cLocalSearchString) '
tek_red++
@ tek_red, 0 SAY '            cLocalSearchString = substr(cLocalSearchString,1,_len-1) '
tek_red++
@ tek_red, 0 SAY '            i = 0 '
tek_red++
@ tek_red, 0 SAY '            dbgotop() '
tek_red++
@ tek_red, 0 SAY '         ENDIF '
tek_red++

tek_red++
@ tek_red, 0 SAY '         IF i > 0 '
tek_red++
@ tek_red, 0 SAY '            Lov_Form_' + _nnv + '.Lov_Grid_' + _nnv + '.Visible := .F. '
tek_red++
@ tek_red, 0 SAY '            Lov_Form_' + _nnv + '.Lov_Grid_' + _nnv + '.Value := i '
tek_red++
@ tek_red, 0 SAY '            Lov_Form_' + _nnv + '.Lov_Grid_' + _nnv + '.Refresh '
tek_red++
@ tek_red, 0 SAY '            Lov_Form_' + _nnv + '.Lov_Grid_' + _nnv + '.Visible := .T. '
tek_red++

tek_red++
@ tek_red, 0 SAY '            cPublicSearchString := cLocalSearchString '
tek_red++
@ tek_red, 0 SAY '            Lov_Form_' + _nnv + '.WhatToSearch.Value := cPublicSearchString '
tek_red++
@ tek_red, 0 SAY '         ENDIF '
tek_red++

tek_red++
@ tek_red, 0 SAY '      ENDIF '
tek_red++

tek_red++
@ tek_red, 0 SAY '      IF asc(ch) == 8 // backspace '
tek_red++
@ tek_red, 0 SAY '         cPublicSearchString := left(cPublicSearchString, max(0,len(cPublicSearchString)-1)) '
tek_red++
@ tek_red, 0 SAY '         Lov_Form_' + _nnv + '.WhatToSearch.Value := cPublicSearchString '
tek_red++
@ tek_red, 0 SAY '         HMG_CleanLastCharacter() '
tek_red++
@ tek_red, 0 SAY '      ENDIF '
tek_red++
@ tek_red, 0 SAY '      Lov_Form_' + _nnv + '.Lov_Grid_' + _nnv + '.SetFocus '
tek_red++
@ tek_red, 0 SAY '   ENDIF '
tek_red++

tek_red++
@ tek_red, 0 SAY '   flag := .F. '
tek_red++

tek_red++
@ tek_red, 0 SAY 'RETURN NIL '

tek_red++
@ tek_red, 0 SAY '*:***********************************************'
tek_red++
@ tek_red, 0 SAY 'FUNCTION select_row_' + _nnv + '()'
tek_red++

tek_red++
@ tek_red, 0 SAY '   SET ORDER TO 1 '
tek_red++
@ tek_red, 0 SAY '   _Retval = aRows[ Lov_Form_' + _nnv + '.Lov_Grid_' + _nnv + '.value, 1 ] '
tek_red++
@ tek_red, 0 SAY '   Lov_Form_' + _nnv + '.Release '
tek_red++

tek_red++
@ tek_red, 0 SAY 'RETURN val(_RetVal) '
tek_red++

@ tek_red, 0 SAY '*:**************************************'
tek_red++
@ tek_red, 0 SAY 'FUNCTION GoSearch_' + _nnv + '()'
tek_red++

tek_red++
@ tek_red, 0 SAY 'cLocalSearchString = rtrim(Lov_Form_' + _nnv + '.WhatToSearch.Value) '
tek_red++

tek_red++
@ tek_red, 0 SAY 'SEEK cLocalSearchString '
tek_red++
@ tek_red, 0 SAY 'IF found() '
tek_red++
@ tek_red, 0 SAY '   _rec = recno() '
tek_red++
@ tek_red, 0 SAY '   _niz = 0 '
tek_red++

tek_red++
@ tek_red, 0 SAY '   FOR ii = 1 TO _redova '
tek_red++
@ tek_red, 0 SAY '      IF val(aRows[ii][4]) = _rec '
tek_red++
@ tek_red, 0 SAY '         i = val(aRows[ii][3]) '
tek_red++
@ tek_red, 0 SAY '         EXIT '
tek_red++
@ tek_red, 0 SAY '      ENDIF '
tek_red++
@ tek_red, 0 SAY '   NEXT '
tek_red++

tek_red++
@ tek_red, 0 SAY '   IF i > 0 '
tek_red++
@ tek_red, 0 SAY '      Lov_Form_' + _nnv + '.Lov_Grid_' + _nnv + '.Visible := .F. '
tek_red++
@ tek_red, 0 SAY '      Lov_Form_' + _nnv + '.Lov_Grid_' + _nnv + '.Value := i '
tek_red++
@ tek_red, 0 SAY '      Lov_Form_' + _nnv + '.Lov_Grid_' + _nnv + '.Refresh '
tek_red++
@ tek_red, 0 SAY '      Lov_Form_' + _nnv + '.Lov_Grid_' + _nnv + '.Visible := .T. '
tek_red++

tek_red++
@ tek_red, 0 SAY '      cPublicSearchString := cLocalSearchString '
tek_red++
@ tek_red, 0 SAY '      Lov_Form_' + _nnv + '.WhatToSearch.Value := cPublicSearchString '
tek_red++
@ tek_red, 0 SAY '   ENDIF '
tek_red++

tek_red++
@ tek_red, 0 SAY 'ELSE '
tek_red++
@ tek_red, 0 SAY '   msginfo("Not found") '
tek_red++
@ tek_red, 0 SAY '   _len = len(cLocalSearchString) '
tek_red++
@ tek_red, 0 SAY '   cLocalSearchString = substr(cLocalSearchString,1,_len-1) '
tek_red++
@ tek_red, 0 SAY '   i = 0 '
tek_red++
@ tek_red, 0 SAY '   dbgotop() '
tek_red++
@ tek_red, 0 SAY 'ENDIF '
tek_red++

tek_red++
@ tek_red, 0 SAY 'SET ORDER TO 1 '
tek_red++
@ tek_red, 0 SAY '_Retval = aRows[ Lov_Form_' + _nnv + '.Lov_Grid_' + _nnv + '.value, 1 ] '
tek_red++
@ tek_red, 0 SAY 'Lov_Form_' + _nnv + '.Release '
tek_red++

tek_red++
@ tek_red, 0 SAY 'RETURN 0 '
tek_red++
@ tek_red, 0 SAY '*:***************************************'
tek_red++
@ tek_red, 0 SAY ''

select 4
dbskip()
enddo
endif

set printer to 
set device to screen
setprc(0,0)
*/
dbcloseall()

MsgInfo ( 'Generate ' + _frm_prg + ' !')

FrmGenForm.Release

RETURN
